import{_ as r,c as s,a,g as t,b as n,d as o,o as l}from"./app-BYbtx4Wy.js";const i={};function m(p,e){return l(),s("div",null,[e[0]||(e[0]=a("h1",{id:"requestparam-和-pathvariable-的区别",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#requestparam-和-pathvariable-的区别"},[a("span",null,"@RequestParam 和 @PathVariable 的区别")])],-1)),e[1]||(e[1]=a("p",null,"@RequestParam 注解和 @PathVariable 注解的区别，从字面上可以看出：",-1)),e[2]||(e[2]=a("ul",null,[a("li",null,[t("前者是获取"),a("strong",null,"请求"),t("里边携带的参数；")]),a("li",null,[t("后者是获取"),a("strong",null,"请求路径"),t("里边的变量参数。")])],-1)),n(" more "),e[3]||(e[3]=o('<p>例如：<code>127.0.0.1/user/{userId}?userName=zhangshan</code>，<code>userId</code> 是路径上的变量，<code>userName</code> 才是请求参数信息。</p><h2 id="requestparam-注解" tabindex="-1"><a class="header-anchor" href="#requestparam-注解"><span>@RequestParam 注解</span></a></h2><p>@RequestParam 有三个参数：</p><ul><li><p><strong>value</strong>：参数名。</p></li><li><p><strong>required</strong>：是否必需，默认为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">true</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span></span></span></span>，表示请求参数中必须包含该参数，如果不包含抛出异常。</p></li><li><p><strong>defaultValue</strong>：默认参数值，如果设置了该值自动将 <code>required</code> 设置为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">false</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span></span></span></span>，如果参数中没有包含该参数则使用默认值。</p><blockquote><p>示例：<code>@RequestParam(value = &quot;userId&quot;, required = false, defaultValue = &quot;1&quot;)</code></p></blockquote></li></ul><h2 id="pathvariable-注解" tabindex="-1"><a class="header-anchor" href="#pathvariable-注解"><span>@PathVariable 注解</span></a></h2><p>当使用 @RequestMapping URI 占位符映射时，url 中可以通过一个或多个 <code>{xxxx}</code> 占位符映射，通过 @PathVariable 可以绑定占位符参数到方法参数中。</p><p>例如：<code>@PathVariable(&quot;userId&quot;) Long userId, @PathVariable(&quot;userName&quot;) String userName</code></p><p>（注：Long 类型可以根据需求自己改变 String 或 int，Spring 会自动做转换）</p><blockquote><p><code>@RequestMapping(&quot;/user/{userId}/{userName}/query&quot;)</code></p><p>请求 URL：<code>http://localhost/user/8/张山/query</code></p></blockquote><div class="hint-container warning"><p class="hint-container-title">@PathVariable 小误区</p><p>有些参考资料中说，如果定义的参数名和占位符中的名称是相同的，则可以将 @PathVariable(xxxx) 简写为：@PathVariable，这其实是错误的！</p><p>因为在正常编译时，Java 类反射对象是不包含方法的入参名称的，如果编译时将 debug 打开（<code>javac –debug=no</code>），方法的入参名称会记录到类中。</p></div>',10))])}const c=r(i,[["render",m],["__file","@RequestParam和@PathVariable的区别.html.vue"]]),d=JSON.parse('{"path":"/program/sundry/work-note/@RequestParam%E5%92%8C@PathVariable%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"@RequestParam 和 @PathVariable 的区别","lang":"zh-CN","frontmatter":{"category":["杂项"],"tag":["工作笔记"],"comment":false,"description":"@RequestParam 注解和 @PathVariable 注解的区别，从字面上可以看出： 前者是获取请求里边携带的参数； 后者是获取请求路径里边的变量参数。","head":[["meta",{"property":"og:url","content":"https://blog.braumace.cn/program/sundry/work-note/@RequestParam%E5%92%8C@PathVariable%E7%9A%84%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"ByteLighting"}],["meta",{"property":"og:title","content":"@RequestParam 和 @PathVariable 的区别"}],["meta",{"property":"og:description","content":"@RequestParam 注解和 @PathVariable 注解的区别，从字面上可以看出： 前者是获取请求里边携带的参数； 后者是获取请求路径里边的变量参数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-24T17:35:44.000Z"}],["meta",{"property":"article:tag","content":"工作笔记"}],["meta",{"property":"article:modified_time","content":"2024-12-24T17:35:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"@RequestParam 和 @PathVariable 的区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-24T17:35:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BraumAce\\",\\"url\\":\\"https://blog.braumace.cn/article\\"}]}"]]},"headers":[{"level":2,"title":"@RequestParam 注解","slug":"requestparam-注解","link":"#requestparam-注解","children":[]},{"level":2,"title":"@PathVariable 注解","slug":"pathvariable-注解","link":"#pathvariable-注解","children":[]}],"git":{"createdTime":1735054918000,"updatedTime":1735061744000,"contributors":[{"name":"BraumAce","email":"1693717911@qq.com","commits":2}]},"readingTime":{"minutes":1.26,"words":379},"filePathRelative":"program/sundry/work-note/@RequestParam和@PathVariable的区别.md","localizedDate":"2024年12月24日","excerpt":"\\n<p>@RequestParam 注解和 @PathVariable 注解的区别，从字面上可以看出：</p>\\n<ul>\\n<li>前者是获取<strong>请求</strong>里边携带的参数；</li>\\n<li>后者是获取<strong>请求路径</strong>里边的变量参数。</li>\\n</ul>\\n","autoDesc":true}');export{c as comp,d as data};
