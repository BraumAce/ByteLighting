import{_ as i,c as s,o as t,b as e}from"./app-Ce7c51kH.js";const a={},n=e(`<h1 id="springboot-整合-minio" tabindex="-1"><a class="header-anchor" href="#springboot-整合-minio"><span>SPringBoot 整合 MinIO</span></a></h1><h2 id="引入依赖" tabindex="-1"><a class="header-anchor" href="#引入依赖"><span>引入依赖</span></a></h2><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;io.minio&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;minio&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;8.5.9&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><div class="hint-container tip"><p class="hint-container-title">MinIO 中的 Bucket、Object</p><p>Bucket 是存储 Object 的逻辑空间，每个 Bucket 之间的数据是相互隔离的，对用户而言，相当于存放文件的顶层文件夹</p><p>Object 是存储到 MinIO 的基本对象，对用户而言，相当于文件</p></div><h2 id="minioclient的常用api" tabindex="-1"><a class="header-anchor" href="#minioclient的常用api"><span>MinioClient的常用API：</span></a></h2><ul><li><p><code>bucketExists()</code>：用于检查指定的存储桶是否存在，返回布尔值，表示存储桶是否存在</p></li><li><p><code>makeBucket()</code>：用于创建一个新的存储桶（bucket），需要指定存储桶的名称</p></li><li><p><code>listBuckets()</code>：用于列出用户有权访问的所有存储桶，返回存储桶的列表</p></li><li><p><code>removeBucket()</code>：用于删除一个已存在的存储桶（bucket），删除失败会抛出异常</p></li></ul>`,7),l=[n];function h(p,r){return t(),s("div",null,l)}const k=i(a,[["render",h],["__file","SpringBoot整合MinIO.html.vue"]]),c=JSON.parse('{"path":"/middleware/MinIO/SpringBoot%E6%95%B4%E5%90%88MinIO.html","title":"SPringBoot 整合 MinIO","lang":"zh-CN","frontmatter":{"date":"2024-07-12T00:00:00.000Z","order":3,"category":["中间件"],"tag":["MinIO"],"description":"SPringBoot 整合 MinIO 引入依赖 配置文件 MinIO 中的 Bucket、Object Bucket 是存储 Object 的逻辑空间，每个 Bucket 之间的数据是相互隔离的，对用户而言，相当于存放文件的顶层文件夹 Object 是存储到 MinIO 的基本对象，对用户而言，相当于文件 MinioClient的常用API： buc...","head":[["meta",{"property":"og:url","content":"https://blog.braumace.cn/ByteLighting/middleware/MinIO/SpringBoot%E6%95%B4%E5%90%88MinIO.html"}],["meta",{"property":"og:site_name","content":"ByteLighting"}],["meta",{"property":"og:title","content":"SPringBoot 整合 MinIO"}],["meta",{"property":"og:description","content":"SPringBoot 整合 MinIO 引入依赖 配置文件 MinIO 中的 Bucket、Object Bucket 是存储 Object 的逻辑空间，每个 Bucket 之间的数据是相互隔离的，对用户而言，相当于存放文件的顶层文件夹 Object 是存储到 MinIO 的基本对象，对用户而言，相当于文件 MinioClient的常用API： buc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-18T13:48:32.000Z"}],["meta",{"property":"article:author","content":"BraumAce"}],["meta",{"property":"article:tag","content":"MinIO"}],["meta",{"property":"article:published_time","content":"2024-07-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-18T13:48:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SPringBoot 整合 MinIO\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-18T13:48:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BraumAce\\",\\"url\\":\\"https://blog.braumace.cn/article\\"}]}"]]},"headers":[{"level":2,"title":"引入依赖","slug":"引入依赖","link":"#引入依赖","children":[]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"MinioClient的常用API：","slug":"minioclient的常用api","link":"#minioclient的常用api","children":[]}],"git":{"createdTime":1721310512000,"updatedTime":1721310512000,"contributors":[{"name":"BraumAce","email":"1693717911@qq.com","commits":1}]},"readingTime":{"minutes":0.7,"words":211},"filePathRelative":"middleware/MinIO/SpringBoot整合MinIO.md","localizedDate":"2024年7月12日","excerpt":"\\n<h2>引入依赖</h2>\\n<div class=\\"language-xml line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"xml\\" data-title=\\"xml\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">dependency</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">    &lt;</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">groupId</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;io.minio&lt;/</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">groupId</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">    &lt;</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">artifactId</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;minio&lt;/</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">artifactId</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">    &lt;</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">version</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;8.5.9&lt;/</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">version</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&lt;/</span><span style=\\"--shiki-light:#22863A;--shiki-dark:#E06C75\\">dependency</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{k as comp,c as data};
