import{_ as a,c as t,a as i,b as e,d as n,o as l}from"./app-D-bxwJbL.js";const h={};function d(p,s){return l(),t("div",null,[s[0]||(s[0]=i("h1",{id:"mysql-基础知识",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#mysql-基础知识"},[i("span",null,"MySQL 基础知识")])],-1)),e(" more "),s[1]||(s[1]=n(`<h2 id="_1-基础" tabindex="-1"><a class="header-anchor" href="#_1-基础"><span>1. 基础</span></a></h2><h3 id="_1-1-连接" tabindex="-1"><a class="header-anchor" href="#_1-1-连接"><span>1.1 连接</span></a></h3><p>MySQL服务器启动完毕后，然后再使用如下指令，来连接 MySQL 服务器：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mysql</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u用户名</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p密码</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-h数据库服务器的IP地址 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-P端口号</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">命令解释</p><p><code>-h</code> 参数不加，默认连接的是本地 127.0.0.1 的 MySQL 服务器</p><p><code>-P</code> 参数不加，默认连接的端口号是 3306</p></div><p>上述指令，可以有两种形式：</p><ul><li>密码直接在 <code>-p</code> 参数之后直接指定 （这种方式不安全，密码直接以明文形式出现在命令行）</li><li>密码在 <code>-p</code> 回车之后，在命令行中输入密码，然后回车</li></ul><h3 id="_1-2-sql-简介" tabindex="-1"><a class="header-anchor" href="#_1-2-sql-简介"><span>1.2 SQL 简介</span></a></h3><p><strong>SQL</strong>：结构化查询语言。一门操作关系型数据库的编程语言，定义操作所有关系型数据库的统一标准。</p><h4 id="_1-2-1-sql-通用语法" tabindex="-1"><a class="header-anchor" href="#_1-2-1-sql-通用语法"><span>1.2.1 SQL 通用语法</span></a></h4><p>1、SQL 语句可以单行或多行书写，以分号结尾。</p><figure><img src="https://cloud.braumace.cn/f/2nsZ/mysql-0.1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>2、SQL 语句可以使用空格/缩进来增强语句的可读性。</p><figure><img src="https://cloud.braumace.cn/f/DxCX/mysql-0.2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>3、MySQL 数据库的 SQL 语句不区分大小写。</p><figure><img src="https://cloud.braumace.cn/f/LwIl/mysql-0.3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>4、注释：</p><ul><li>单行注释：<code>--</code> 注释内容或 <code>#</code> 注释内容 (MySQL特有)</li><li>多行注释： <code>/* 注释内容 */</code></li></ul><h4 id="_1-2-2-分类" tabindex="-1"><a class="header-anchor" href="#_1-2-2-分类"><span>1.2.2 分类</span></a></h4><p>SQL 语句根据其功能被分为四大类：DDL、DML、DQL、DCL</p><table><thead><tr><th><strong>分类</strong></th><th><strong>全称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>DDL</td><td>Data Definition Language</td><td>数据定义语言，用来定义数据库对象(数据库，表，字段)</td></tr><tr><td>DML</td><td>Data Manipulation Language</td><td>数据操作语言，用来对数据库表中的数据进行增删改</td></tr><tr><td>DQL</td><td>Data Query Language</td><td>数据查询语言，用来查询数据库中表的记录</td></tr><tr><td>DCL</td><td>Data Control Language</td><td>数据控制语言，用来创建数据库用户、控制数据库的访问权限</td></tr></tbody></table><h2 id="_2-数据库设计-ddl" tabindex="-1"><a class="header-anchor" href="#_2-数据库设计-ddl"><span>2. 数据库设计-DDL</span></a></h2><p>针对于数据库设计，主要包括三个阶段：</p><ol><li>数据库设计阶段 <ul><li>参照页面原型以及需求文档设计数据库表结构</li></ul></li><li>数据库操作阶段 <ul><li>根据业务功能的实现，编写SQL语句对数据表中的数据进行增删改查操作</li></ul></li><li>数据库优化阶段 <ul><li>通过数据库的优化来提高数据库的访问性能。优化手段：索引、SQL优化、分库分表等</li></ul></li></ol><h3 id="_2-1-数据库操作" tabindex="-1"><a class="header-anchor" href="#_2-1-数据库操作"><span>2.1 数据库操作</span></a></h3><p>DDL 英文全称是 Data Definition Language (数据定义语言)，用来定义数据库对象(数据库、表)。</p><p>DDL 中数据库的常见操作：查询、创建、使用、删除。</p><h4 id="_2-1-1-查询数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-1-查询数据库"><span>2.1.1 查询数据库</span></a></h4><p><strong>查询所有数据库：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> databases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>查询当前数据库：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> database</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">用法</p><p>我们要操作某一个数据库，必须要切换到对应的数据库中。</p><p>通过指令 <code>select database()</code>，就可以查询到当前所处的数据库</p></div><h4 id="_2-1-2-创建数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-2-创建数据库"><span>2.1.2 创建数据库</span></a></h4><p><strong>语法：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> database</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [ if not exists ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 数据库名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><mark>注意：在同一个数据库服务器中，不能创建两个名称相同的数据库，否则将会报错。</mark></p><ul><li>可以使用 <code>if not exists</code> 来避免这个问题</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 数据库不存在,则创建该数据库；如果存在则不创建</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> database</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> extists my_database;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-3-使用数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-3-使用数据库"><span>2.1.3 使用数据库</span></a></h4><p><strong>语法：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 数据库名 ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">切换数据库</p><p>我们要操作某一个数据库下的表时，就需要通过该指令，切换到对应的数据库下，否则不能操作。</p><figure><img src="https://cloud.braumace.cn/f/WWi7/mysql-0.4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h4 id="_2-1-4-删除数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-4-删除数据库"><span>2.1.4 删除数据库</span></a></h4><p><strong>语法：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> database</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [ if exists ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 数据库名 ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>如果删除一个不存在的数据库，将会报错。</p><p>可以加上参数 <code>if exists</code> ，如果数据库存在，再执行删除，否则不执行删除。</p></blockquote><p>案例：删除 itcast 数据库</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> database</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> itcast; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- itcast数据库存在时删除</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>命令执行效果如下：</p><figure><img src="https://cloud.braumace.cn/f/lgFD/mysql-0.5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">说明</p><p>上述语法中的 <code>database</code>，也可以替换成 <code>schema</code></p><ul><li>如：<code>create schema db01</code>;</li><li>如：<code>show schemas</code>;</li></ul></div><h3 id="_2-2-表操作" tabindex="-1"><a class="header-anchor" href="#_2-2-表操作"><span>2.2 表操作</span></a></h3><p>关于表结构的操作也是包含四个部分：创建表、查询表、修改表、删除表。</p><h4 id="_2-2-1-创建" tabindex="-1"><a class="header-anchor" href="#_2-2-1-创建"><span>2.2.1 创建</span></a></h4><h5 id="_2-2-1-1-语法" tabindex="-1"><a class="header-anchor" href="#_2-2-1-1-语法"><span>2.2.1.1 语法</span></a></h5><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  表名</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	字段1  字段1类型 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[约束]</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  [comment  字段1注释 ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	字段2  字段2类型 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[约束]</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  [comment  字段2注释 ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	......</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	字段n  字段n类型 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[约束]</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  [comment  字段n注释 ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ comment  表注释 ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意： [ ] 中的内容为可选参数； 最后一个字段后面没有逗号</p></blockquote><h5 id="_2-2-1-2-约束" tabindex="-1"><a class="header-anchor" href="#_2-2-1-2-约束"><span>2.2.1.2 约束</span></a></h5><p>概念：所谓约束就是作用在表中字段上的规则，用于限制存储在表中的数据。</p><p>作用：就是来保证数据库当中数据的正确性、有效性和完整性。</p><p>在MySQL数据库当中，提供了以下5种约束：</p><table><thead><tr><th><strong>约束</strong></th><th><strong>描述</strong></th><th><strong>关键字</strong></th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段值不能为null</td><td>not null</td></tr><tr><td>唯一约束</td><td>保证字段的所有数据都是唯一、不重复的</td><td>unique</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>primary key</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段值，则采用默认值</td><td>default</td></tr><tr><td>外键约束</td><td>让两张表的数据建立连接，保证数据的一致性和完整性</td><td>foreign key</td></tr></tbody></table><blockquote><p>注意：约束是作用于表中字段上的，可以在创建表/修改表的时候添加约束。</p></blockquote><p>MySQL数据库为解决id问题，提供了一个关键字：<code>auto_increment</code>（自动增长）</p><div class="hint-container info"><p class="hint-container-title">主键自增：auto_increment</p><ul><li>每次插入新的行记录时，数据库自动生成 id 字段(主键)下的值</li><li>具有 <code>auto_increment</code> 的数据列是一个正数序列开始增长(从 1 开始自增)</li></ul></div><h5 id="_2-2-1-3-数据类型" tabindex="-1"><a class="header-anchor" href="#_2-2-1-3-数据类型"><span>2.2.1.3 数据类型</span></a></h5><p>MySQL中的数据类型主要分为三类：数值类型、字符串类型、日期时间类型。</p><p><strong>数值类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>有符号(SIGNED)范围</th><th>无符号(UNSIGNED)范围</th><th>描述</th></tr></thead><tbody><tr><td>TINYINT</td><td>1byte</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2bytes</td><td>(-32768，32767)</td><td>(0，65535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3bytes</td><td>(-8388608，8388607)</td><td>(0，16777215)</td><td>大整数值</td></tr><tr><td>INT/INTEGER</td><td>4bytes</td><td>(-2147483648，2147483647)</td><td>(0，4294967295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8bytes</td><td>(-2<sup>63，2</sup>63-1)</td><td>(0，2^64-1)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4bytes</td><td>(-3.402823466 E+38，3.402823466351 E+38)</td><td>0 和 (1.175494351 E-38，3.402823466 E+38)</td><td>单精度浮点数值</td></tr><tr><td>DOUBLE</td><td>8bytes</td><td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td><td>0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)</td><td>双精度浮点数值</td></tr><tr><td>DECIMAL</td><td></td><td>依赖于M(精度)和D(标度)的值</td><td>依赖于M(精度)和D(标度)的值</td><td>小数值(精确定点数)</td></tr></tbody></table><p><strong>字符串类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>描述</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串(需要指定长度)</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串(需要指定长度)</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过255个字符的二进制数据</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><p><code>char</code> 与 <code>varchar</code> 都可以描述字符串，<code>char</code> 是定长字符串，指定长度多长，就占用多少个字符，和字段值的长度无关 。<br> 而 <code>varchar</code> 是变长字符串，指定的长度为最大占用长度 。相对来说，<code>char</code> 的性能会更高些。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">示例： </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    用户名 username </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">---长度不定, 最长不会超过50</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	username </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	手机号 phone </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">---固定长度为11</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	phone </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>日期时间类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01 至 9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>-838:59:59 至 838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901 至 2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00 至 9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:01 至 2038-01-19 03:14:07</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="_2-2-2-查询" tabindex="-1"><a class="header-anchor" href="#_2-2-2-查询"><span>2.2.2 查询</span></a></h4><p><strong>查询当前数据库所有表</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show tables;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>查看指定表结构</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">desc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 ; #可以查看指定表的字段、字段的类型、是否可以为NULL、是否存在默认值等信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>查询指定表的建表语句</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-2-3-修改" tabindex="-1"><a class="header-anchor" href="#_2-2-3-修改"><span>2.2.3 修改</span></a></h4><p><strong>添加字段</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段名  类型(长度)  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[comment 注释]</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  [约束]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>案例： 为 <code>tb_emp</code> 表添加字段 qq，字段类型为 varchar(11)</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tb_emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  qq  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;QQ号码&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>修改数据类型</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">modify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段名  新数据类型(长度);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 change  旧字段名  新字段名  类型(长度)  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[comment 注释]</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  [约束]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>案例：修改 qq 字段名为 qq_num，字段类型 varchar(13)</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tb_emp change qq qq_num </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">13</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;QQ号码&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>删除字段</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>修改表名</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rename </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  新表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-2-4-删除" tabindex="-1"><a class="header-anchor" href="#_2-2-4-删除"><span>2.2.4 删除</span></a></h4><p>删除表语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [ if exists ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><code>if exists</code> ：只有表名存在时才会删除该表，表名不存在，则不执行删除操作(如果不加该参数项，删除一张不存在的表，执行将会报错)。</p></blockquote><h2 id="_3-数据库操作-dml" tabindex="-1"><a class="header-anchor" href="#_3-数据库操作-dml"><span>3. 数据库操作-DML</span></a></h2><p>DML英文全称是 Data Manipulation Language (数据操作语言)，用来对数据库中表的数据记录进行增、删、改操作。</p><ul><li>添加数据（INSERT）</li><li>修改数据（UPDATE）</li><li>删除数据（DELETE）</li></ul><h3 id="_3-1-增加-insert" tabindex="-1"><a class="header-anchor" href="#_3-1-增加-insert"><span>3.1 增加 (insert)</span></a></h3><p>insert 语法：</p><ul><li><p>向指定字段添加数据</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 (字段名1, 字段名2) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (值1, 值2);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>全部字段添加数据</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (值1, 值2, ...);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>批量添加数据（指定字段）</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 (字段名1, 字段名2) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (值1, 值2), (值1, 值2);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>批量添加数据（全部字段）</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (值1, 值2, ...), (值1, 值2, ...);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>Insert 操作的注意事项：</p><ol><li><p>插入数据时，指定的字段顺序需要与值的顺序是一一对应的。</p></li><li><p>字符串和日期型数据应该包含在引号中。</p></li><li><p>插入的数据大小，应该在字段的规定范围内。</p></li></ol><h3 id="_3-2-修改-update" tabindex="-1"><a class="header-anchor" href="#_3-2-修改-update"><span>3.2 修改 (update)</span></a></h3><p>update 语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 值1 , 字段名2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 值2 , .... </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[where 条件]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>案例：将 <code>tb_emp</code> 表中 id 为 1 的员工，姓名 name 字段更新为&#39;张三&#39;</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tb_emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;张三&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,update_time</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ol><li><p>修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的所有数据。</p></li><li><p>在修改数据时，一般需要同时修改公共字段 <code>update_time</code>，将其修改为当前操作时间。</p></li></ol></div><h3 id="_3-3-删除-delete" tabindex="-1"><a class="header-anchor" href="#_3-3-删除-delete"><span>3.3 删除 (delete)</span></a></h3><p>delete 语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">delete</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[where  条件]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ul><li><p>DELETE 语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的所有数据。</p></li><li><p>DELETE 语句不能删除某一个字段的值(可以使用 <code>UPDATE</code>，将该字段值置为 <code>NULL</code> 即可)。</p></li><li><p>当进行删除全部数据操作时，会提示询问是否确认删除所有数据，直接点击 <code>Execute</code> 即可。</p></li></ul></div><h2 id="_4-数据库操作-dql" tabindex="-1"><a class="header-anchor" href="#_4-数据库操作-dql"><span>4. 数据库操作-DQL</span></a></h2><h3 id="_4-1-语法" tabindex="-1"><a class="header-anchor" href="#_4-1-语法"><span>4.1 语法</span></a></h3><p>DQL 查询语句，语法结构如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	字段列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	表名列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	条件列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP  BY</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	分组字段列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">HAVING</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	分组后条件列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ORDER BY</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	排序字段列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LIMIT</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	分页参数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询分为以下几种类型：</p><ul><li>基本查询（不带任何条件）</li><li>条件查询（where）</li><li>分组查询（group by）</li><li>排序查询（order by）</li><li>分页查询（limit）</li></ul><h3 id="_4-2-基本查询" tabindex="-1"><a class="header-anchor" href="#_4-2-基本查询"><span>4.2 基本查询</span></a></h3><p>在基本查询的 DQL 语句中，不带任何的查询条件，语法如下：</p><ul><li><p>查询多个字段</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段1, 字段2, 字段3 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查询所有字段（通配符）</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> *  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>设置别名</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段1 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ as 别名1 ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> , 字段2 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ as 别名2 ]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>去除重复记录</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select distinct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段列表 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="_4-3-条件查询" tabindex="-1"><a class="header-anchor" href="#_4-3-条件查询"><span>4.3 条件查询</span></a></h3><p>语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   表名   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   条件列表 ; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 条件列表：意味着可以有多个条件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在SQL语句当中构造条件的运算符分为两类：</p><ul><li>比较运算符</li><li>逻辑运算符</li></ul><p>常用的比较运算符如下:</p><table><thead><tr><th><strong>比较运算符</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt; 或 !=</td><td>不等于</td></tr><tr><td>between ... and ...</td><td>在某个范围之内(含最小、最大值)</td></tr><tr><td>in(...)</td><td>在in之后的列表中的值，多选一</td></tr><tr><td>like 占位符</td><td>模糊匹配(_匹配单个字符, %匹配任意个字符)</td></tr><tr><td>is null</td><td>是null</td></tr></tbody></table><p>常用的逻辑运算符如下:</p><table><thead><tr><th><strong>逻辑运算符</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>and 或 &amp;&amp;</td><td>并且 (多个条件同时成立)</td></tr><tr><td>or 或 ||</td><td>或者 (多个条件任意一个成立)</td></tr><tr><td>not 或 !</td><td>非 , 不是</td></tr></tbody></table><h3 id="_4-4-聚合函数" tabindex="-1"><a class="header-anchor" href="#_4-4-聚合函数"><span>4.4 聚合函数</span></a></h3><p>使用聚合函数查询是纵向查询，它是对一列的值进行计算，然后返回一个结果值。（将一列数据作为一个整体，进行纵向计算）</p><p>语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  聚合函数(字段列表)  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名 ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>注意 : 聚合函数会忽略空值，对NULL值不作为统计。</p></blockquote><p>常用聚合函数：</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>count</td><td>统计数量</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">说明</p><p><code>count</code> ：按照列去统计有多少行数据。</p><ul><li>在根据指定的列统计的时候，如果这一列中有 <code>null</code> 的行，该行不会被统计在其中。</li></ul><p><code>sum</code> ：计算指定列的数值和，如果不是数值类型，那么计算结果为0</p><p><code>max</code> ：计算指定列的最大值</p><p><code>min</code> ：计算指定列的最小值</p><p><code>avg</code> ：计算指定列的平均值</p></div><h3 id="_4-5-分组查询" tabindex="-1"><a class="header-anchor" href="#_4-5-分组查询"><span>4.5 分组查询</span></a></h3><p>分组： 按照某一列或者某几列，把相同的数据进行合并输出。</p><blockquote><p>分组其实就是按列进行分类(指定列下相同的数据归为一类)，然后可以对分类完的数据进行合并计算。</p><p>分组查询通常会使用聚合函数进行计算。</p></blockquote><p>语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[where 条件]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  group by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 分组字段名  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[having 分组后过滤条件]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ul><li><p>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义</p></li><li><p>执行顺序：<code>where</code> &gt; 聚合函数 &gt; <code>having</code></p></li></ul></div><p><strong>where 与 having 区别（面试题）</strong></p><ul><li>执行时机不同：<code>where</code> 是分组之前进行过滤，不满足 <code>where</code> 条件，不参与分组；而 <code>having</code> 是分组之后对结果进行过滤。</li><li>判断条件不同：<code>where</code> 不能对聚合函数进行判断，而 <code>having</code> 可以。</li></ul><h3 id="_4-6-排序查询" tabindex="-1"><a class="header-anchor" href="#_4-6-排序查询"><span>4.6 排序查询</span></a></h3><p>排序在日常开发中是非常常见的一个操作，有升序排序，也有降序排序。</p><p>语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   表名   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[where  条件列表]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[group by  分组字段 ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">order  by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段1  排序方式1 , 字段2  排序方式2 … ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>排序方式：</p><ul><li><p>ASC ：升序（默认值）</p></li><li><p>DESC：降序</p></li></ul></li></ul><blockquote><p>注意事项：如果是升序, 可以不指定排序方式ASC</p></blockquote><h3 id="_4-7-分页查询" tabindex="-1"><a class="header-anchor" href="#_4-7-分页查询"><span>4.7 分页查询</span></a></h3><p>分页操作在业务系统开发时，也是非常常见的一个功能，日常我们在网站中看到的各种各样的分页条，后台也都需要借助于数据库的分页操作。</p><p>分页查询语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   表名  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">limit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  起始索引, 查询记录数 ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ol><li>起始索引从 0 开始。</li><li>计算公式：<code>起始索引 = （查询页码 - 1）* 每页显示记录数</code></li><li>分页查询是数据库的方言，不同的数据库有不同的实现，MySQL 中是 <code>LIMIT</code></li><li>如果查询的是第一页数据，起始索引可以省略，直接简写为 <code>limit 条数</code></li></ol></div><p>前端查询数据库的流程：</p><ol><li>前端在请求服务端时，传递的参数 <ul><li>当前页码 page</li><li>每页显示条数 pageSize</li></ul></li><li>后端需要响应什么数据给前端 <ul><li>所查询到的数据列表（存储到 List 集合中）</li><li>总记录数</li></ul></li></ol><div class="hint-container info"><p class="hint-container-title">示例</p><p>后台给前端返回的数据包含：List 集合（数据列表）、total（总记录数）</p><p>当数据量较大时，通常封装到 <code>PageBean</code> 对象中，并将该对象转换为 json 格式的数据响应回给浏览器。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">NoArgsConstructor</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">AllArgsConstructor</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> PageBean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> total</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 总记录数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   // 当前页数据列表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="_5-多表设计" tabindex="-1"><a class="header-anchor" href="#_5-多表设计"><span>5. 多表设计</span></a></h2><p>项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：</p><ul><li>一对多（多对一）</li><li>多对多</li><li>一对一</li></ul><h3 id="_5-1-一对多-外键约束" tabindex="-1"><a class="header-anchor" href="#_5-1-一对多-外键约束"><span>5.1 一对多 - 外键约束</span></a></h3><blockquote><p><strong>一对多关系实现：在数据库表中多的一方，添加字段，来关联属于一这方的主键。</strong></p></blockquote><p>外键约束：让两张表的数据建立连接，保证数据的一致性和完整性。</p><p>对应的关键字：<code>foreign key</code></p><p>语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 创建表时指定</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 表名</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	字段名  数据类型,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	[constraint]</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [外键名称]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> foreign  key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (外键字段名) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 主表 (主表列名)	</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 建完表后，添加外键</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  外键名称  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(外键字段名) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 主表(主表列名);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>物理外键和逻辑外键</strong></p><ul><li><p>物理外键</p><ul><li>概念：使用 <code>foreign key</code> 定义外键关联另外一张表。</li><li>缺点： <ul><li>影响增、删、改的效率（需要检查外键关系）。</li><li>仅用于单节点数据库，不适用与分布式、集群场景。</li><li>容易引发数据库的死锁问题，消耗性能。</li></ul></li></ul></li><li><p>逻辑外键</p><ul><li>概念：在业务层逻辑中，解决外键关联。</li><li>通过逻辑外键，就可以很方便的解决上述问题。</li></ul></li></ul><blockquote><p><strong>在现在的企业开发中，很少会使用物理外键，都是使用逻辑外键。 甚至在一些数据库开发规范中，会明确指出禁止使用物理外键 <code>foreign key</code></strong></p></blockquote><h3 id="_5-2-一对一" tabindex="-1"><a class="header-anchor" href="#_5-2-一对一"><span>5.2 一对一</span></a></h3><p>一对一关系表在实际开发中应用起来比较简单，通常是用来做单表的拆分，也就是将一张大表拆分成两张小表，将大表中的一些基础字段放在一张表当中，将其他的字段放在另外一张表当中，以此来提高数据的操作效率。</p><div class="hint-container info"><p class="hint-container-title">一对一的应用场景：用户表(基本信息+身份信息)</p><figure><img src="https://cloud.braumace.cn/f/EWHY/mysql-0.6.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>基本信息：用户的ID、姓名、性别、手机号、学历</li><li>身份信息：民族、生日、身份证号、身份证签发机关，身份证的有效期(开始时间、结束时间)</li></ul><p>如果在业务系统当中，对用户的基本信息查询频率特别的高，但是对于用户的身份信息查询频率很低，此时出于提高查询效率的考虑，可以将这张大表拆分成两张小表，第一张表存放的是用户的基本信息，而第二张表存放的就是用户的身份信息。他们两者之间一对一的关系，一个用户只能对应一个身份证，而一个身份证也只能关联一个用户。</p></div><p>那么在数据库层面怎么去体现上述两者之间是一对一的关系呢？</p><p>其实一对一我们可以看成一种特殊的一对多。一对多我们是怎么设计表关系的？是不是在多的一方添加外键。同样我们也可以通过外键来体现一对一之间的关系，我们只需要在任意一方来添加一个外键就可以了。</p><figure><img src="https://cloud.braumace.cn/f/NEuv/mysql-0.7.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>一对一 ：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的 (<code>UNIQUE</code>)</p></blockquote><h3 id="_5-3-多对多" tabindex="-1"><a class="header-anchor" href="#_5-3-多对多"><span>5.3 多对多</span></a></h3><p>多对多的关系在开发中属于也比较常见的。比如：学生和老师的关系，一个学生可以有多个授课老师，一个授课老师也可以有多个学生。在比如：学生和课程的关系，一个学生可以选修多门课程，一个课程也可以供多个学生选修。</p><p>案例：学生与课程的关系</p><ul><li><p>关系：一个学生可以选修多门课程，一门课程也可以供多个学生选择</p></li><li><p>实现关系：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p></li></ul><figure><img src="https://cloud.braumace.cn/f/Xoc0/mysql-0.8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_6-多表查询" tabindex="-1"><a class="header-anchor" href="#_6-多表查询"><span>6. 多表查询</span></a></h2><h3 id="_6-1-概述" tabindex="-1"><a class="header-anchor" href="#_6-1-概述"><span>6.1 概述</span></a></h3><h4 id="_6-1-1-介绍" tabindex="-1"><a class="header-anchor" href="#_6-1-1-介绍"><span>6.1.1 介绍</span></a></h4><p><strong>多表查询</strong>：查询时从多张表中获取所需数据</p><div class="hint-container info"><p class="hint-container-title">多表查询</p><p>单表查询的 SQL 语句：<code>select 字段列表 from 表名;</code></p><p>那么要执行多表查询，只需要使用逗号分隔多张表即可，如：<code>select 字段列表 from 表1, 表2;</code></p></div><p>查询用户表和部门表中的数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  tb_emp , tb_dept;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>笛卡尔积</strong>：笛卡尔乘积是指在数学中，两个集合（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 集合和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 集合）的所有组合情况。</p><figure><img src="https://cloud.braumace.cn/f/vrhE/mysql-0.10.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在多表查询时，需要消除无效的笛卡尔积，只保留表关联部分的数据。</p><figure><img src="https://cloud.braumace.cn/f/xYTl/mysql-0.9.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在查询时给多表查询加上连接查询的条件：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tb_emp , tb_dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> tb_emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> tb_dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_6-1-2-分类" tabindex="-1"><a class="header-anchor" href="#_6-1-2-分类"><span>6.1.2 分类</span></a></h4><p>多表查询可以分为：</p><ol><li><p>连接查询</p><ul><li>内连接：相当于查询 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 交集部分数据</li></ul><figure><img src="https://cloud.braumace.cn/f/AKUE/mysql-0.11.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>外连接</p><ul><li><p>左外连接：查询左表所有数据(包括两张表交集部分数据)</p></li><li><p>右外连接：查询右表所有数据(包括两张表交集部分数据)</p></li></ul></li><li><p>子查询</p></li></ol><h3 id="_6-3-内连接" tabindex="-1"><a class="header-anchor" href="#_6-3-内连接"><span>6.3 内连接</span></a></h3><p>内连接查询：查询两表或多表中交集部分数据。</p><p>内连接从语法上可以分为：</p><ul><li><p>隐式内连接</p></li><li><p>显式内连接</p></li></ul><p>隐式内连接语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表1 , 表2  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  条件 ... ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>显式内连接语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表1  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ inner ]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表2  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  连接条件 ... ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>多表查询时给表起别名：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- tableA  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  别名1,  tableB  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  别名2 ;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- tableA  别名1,  tableB  别名2 ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意事项</p><p>一旦为表起了别名，就不能再使用表名来指定对应的字段了，此时只能够使用别名来指定字段。</p></div><h3 id="_6-3-外连接" tabindex="-1"><a class="header-anchor" href="#_6-3-外连接"><span>6.3 外连接</span></a></h3><p>外连接分为两种：左外连接 和 右外连接。</p><p>左外连接语法结构：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表1  left  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ outer ]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表2  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  连接条件 ... ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>左外连接相当于查询表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>（左表）的所有数据，当然也包含表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>和表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>交集部分的数据。</p></blockquote><p>右外连接语法结构：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  字段列表  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表1  right  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ outer ]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表2  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  连接条件 ... ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>右外连接相当于查询表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>（右表）的所有数据，当然也包含表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>和表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>交集部分的数据。</p></blockquote><div class="hint-container tip"><p class="hint-container-title">注意事项</p><p>左外连接和右外连接是可以相互替换的，只需要调整连接查询时 SQL 语句中表的先后顺序就可以了。而我们在日常开发使用时，更偏向于左外连接。</p></div><h3 id="_6-4-子查询" tabindex="-1"><a class="header-anchor" href="#_6-4-子查询"><span>6.4 子查询</span></a></h3><h4 id="_6-4-1-介绍" tabindex="-1"><a class="header-anchor" href="#_6-4-1-介绍"><span>6.4.1 介绍</span></a></h4><p>SQL 语句中嵌套 <code>select</code> 语句，称为嵌套查询，又称子查询。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  *  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  t1  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  column1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  column1  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  t2 ... );</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>子查询外部的语句可以是 <code>insert / update / delete / select</code> 的任何一个，最常见的是 <code>select</code>.</p></blockquote><p>根据子查询结果的不同分为：</p><ol><li><p>标量子查询（子查询结果为单个值「一行一列」）</p></li><li><p>列子查询（子查询结果为一列，但可以是多行）</p></li><li><p>行子查询（子查询结果为一行，但可以是多列）</p></li><li><p>表子查询（子查询结果为多行多列「相当于子查询结果是一张表」）</p></li></ol><p>子查询可以书写的位置：</p><ol><li><code>where</code> 之后</li><li><code>from</code> 之后</li><li><code>select</code> 之后</li></ol><h4 id="_6-4-2-标量子查询" tabindex="-1"><a class="header-anchor" href="#_6-4-2-标量子查询"><span>6.4.2 标量子查询</span></a></h4><p>子查询返回的结果是单个值(数字、字符串、日期等)，最简单的形式，这种子查询称为标量子查询。</p><p>常用的操作符： <code>=</code> <code>&lt;&gt;</code> <code>&gt;</code> <code>&gt;=</code> <code>&lt;</code> <code>&lt;=</code></p><h4 id="_6-4-3-列子查询" tabindex="-1"><a class="header-anchor" href="#_6-4-3-列子查询"><span>6.4.3 列子查询</span></a></h4><p>子查询返回的结果是一列(可以是多行)，这种子查询称为列子查询。</p><p>常用的操作符：</p><table><thead><tr><th><strong>操作符</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>IN</td><td>在指定的集合范围之内，多选一</td></tr><tr><td>NOT IN</td><td>不在指定的集合范围之内</td></tr></tbody></table><h4 id="_6-4-4-行子查询" tabindex="-1"><a class="header-anchor" href="#_6-4-4-行子查询"><span>6.4.4 行子查询</span></a></h4><p>子查询返回的结果是一行(可以是多列)，这种子查询称为行子查询。</p><p>常用的操作符：<code>=</code> 、<code>&lt;&gt;</code> 、<code>IN</code> 、<code>NOT IN</code></p><h4 id="_6-4-5-表子查询" tabindex="-1"><a class="header-anchor" href="#_6-4-5-表子查询"><span>6.4.5 表子查询</span></a></h4><p>子查询返回的结果是多行多列，常作为临时表，这种子查询称为表子查询。</p><h2 id="_7-事务" tabindex="-1"><a class="header-anchor" href="#_7-事务"><span>7. 事务</span></a></h2><h3 id="_7-1-介绍" tabindex="-1"><a class="header-anchor" href="#_7-1-介绍"><span>7.1 介绍</span></a></h3><p>在实际的业务开发中，有些业务操作要多次访问数据库。一个业务要发送多条 SQL 语句给数据库执行。需要将多次访问数据库的操作视为一个整体来执行，要么所有的 SQL 语句全部执行成功。如果其中有一条 SQL 语句失败，就进行事务的回滚，所有的 SQL 语句全部执行失败。</p><p>简而言之：事务是一组操作的集合，它是一个不可分割的工作单位。事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p><p><strong>事务作用</strong>：保证在一个事务中多次操作数据库表中数据时，要么全都成功,要么全都失败。</p><h3 id="_7-2-操作" tabindex="-1"><a class="header-anchor" href="#_7-2-操作"><span>7.2 操作</span></a></h3><p>MYSQL中有两种方式进行事务的操作：</p><ol><li><strong>自动提交</strong>事务：即执行一条 sql 语句提交一次事务。（默认 MySQL 的事务是自动提交）</li><li><strong>手动提交</strong>事务：先开启，再提交</li></ol><p>事务操作有关的 SQL 语句：</p><table><thead><tr><th>SQL语句</th><th>描述</th></tr></thead><tbody><tr><td>start transaction; / begin ;</td><td>开启手动控制事务</td></tr><tr><td>commit;</td><td>提交事务</td></tr><tr><td>rollback;</td><td>回滚事务</td></tr></tbody></table><blockquote><p>手动提交事务使用步骤：</p><ul><li>第1种情况：开启事务 =&gt; 执行SQL语句 =&gt; 成功 =&gt; 提交事务</li><li>第2种情况：开启事务 =&gt; 执行SQL语句 =&gt; 失败 =&gt; 回滚事务</li></ul></blockquote><h3 id="_7-3-四大特性" tabindex="-1"><a class="header-anchor" href="#_7-3-四大特性"><span>7.3 四大特性</span></a></h3><ul><li><p><strong>原子性（Atomicity）</strong> ：原子性是指事务包装的一组 sql 是一个不可分割的工作单元，事务中的操作要么全部成功，要么全部失败。</p></li><li><p><strong>一致性（Consistency）</strong>：一个事务完成之后数据都必须处于一致性状态。</p><ul><li><p>如果事务成功的完成，那么数据库的所有变化将生效。</p></li><li><p>如果事务执行出现错误，那么数据库的所有变化将会被回滚(撤销)，返回到原始状态。</p></li></ul></li><li><p><strong>隔离性（Isolation）</strong>：多个用户并发的访问数据库时，一个用户的事务不能被其他用户的事务干扰，多个并发的事务之间要相互隔离。</p><ul><li>一个事务的成功或者失败对于其他的事务是没有影响。</li></ul></li><li><p><strong>持久性（Durability）</strong>：一个事务一旦被提交或回滚，它对数据库的改变将是永久性的，哪怕数据库发生异常，重启之后数据亦然存在。</p></li></ul><div class="hint-container info"><p class="hint-container-title">关键</p><p>面试题：事务有哪些特性？</p><ul><li>原子性（Atomicity）：事务是不可分割的最小单元，要么全部成功，要么全部失败。</li><li>一致性（Consistency）：事务完成时，必须使所有的数据都保持一致状态。</li><li>隔离性（Isolation）：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。</li><li>持久性（Durability）：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。</li></ul><blockquote><p>事务的四大特性简称为：ACID</p></blockquote></div><h2 id="_8-索引" tabindex="-1"><a class="header-anchor" href="#_8-索引"><span>8. 索引</span></a></h2><h3 id="_8-1-介绍" tabindex="-1"><a class="header-anchor" href="#_8-1-介绍"><span>8.1 介绍</span></a></h3><p>索引 <code>index</code> ：是帮助数据库高效获取数据的数据结构 。</p><ul><li>简单来讲，就是使用索引可以提高查询的效率。</li></ul><p>优点：</p><ol><li>提高数据查询的效率，降低数据库的 IO 成本。</li><li>通过索引列对数据进行排序，降低数据排序的成本，降低 CPU 消耗。</li></ol><p>缺点：</p><ol><li>索引会占用存储空间。</li><li>索引大大提高了查询效率，同时却也降低了 <code>insert</code>、<code>update</code>、<code>delete</code> 的效率。</li></ol><h3 id="_8-2-结构" tabindex="-1"><a class="header-anchor" href="#_8-2-结构"><span>8.2 结构</span></a></h3><p>MySQL 数据库支持的索引结构有很多，如：Hash 索引、B+Tree 索引、Full-Text 索引等。</p><p>我们平常所说的索引，如果没有特别指明，都是指默认的 <code>B+Tree</code> 结构组织的索引。</p><div class="hint-container info"><p class="hint-container-title">二叉查找树</p><p>二叉查找树：左边的子节点比父节点小，右边的子节点比父节点大</p><figure><img src="https://cloud.braumace.cn/f/yzt1/mysql-0.12.png" alt="二叉查找树" tabindex="0" loading="lazy"><figcaption>二叉查找树</figcaption></figure><p>当我们向二叉查找树保存数据时，是按照从大到小（或从小到大）的顺序保存的，此时就会形成一个单向链表，搜索性能会打折扣。</p><figure><img src="https://cloud.braumace.cn/f/9Rfr/mysql-0.13.png" alt="退化的二叉查找树" tabindex="0" loading="lazy"><figcaption>退化的二叉查找树</figcaption></figure><p>可以选择平衡二叉树或者是红黑树来解决上述问题。（红黑树也是一棵平衡的二叉树）</p><figure><img src="https://cloud.braumace.cn/f/wGSk/mysql-0.14.png" alt="平衡二叉树" tabindex="0" loading="lazy"><figcaption>平衡二叉树</figcaption></figure><p>但是在 Mysql 数据库中并没有使用二叉搜索数或二叉平衡数或红黑树来作为索引的结构。</p></div><p><strong>思考：采用二叉搜索树或者是红黑树来作为索引的结构有什么问题？</strong></p><details><summary>答案</summary> 最大的问题就是在数据量大的情况下，树的层级比较深，会影响检索速度。 因为不管是二叉搜索数还是红黑数，一个节点下面只能有两个子节点。此时在数据量大的情况下，就会造成数的高度比较高，树的高度一旦高了，检索速度就会降低。 </details><div class="hint-container info"><p class="hint-container-title">说明</p><p>如果数据结构是红黑树，那么查询 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1000</mn></mrow><annotation encoding="application/x-tex">1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span> 万条数据，根据计算树的高度大概是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>23</mn></mrow><annotation encoding="application/x-tex">23</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">23</span></span></span></span> 左右，这样确实比之前的方式快了很多，但是如果高并发访问，那么一个用户有可能需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>23</mn></mrow><annotation encoding="application/x-tex">23</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">23</span></span></span></span> 次磁盘 IO，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn></mrow><annotation encoding="application/x-tex">100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span> 万用户，那么会造成效率极其低下。</p><p>所以为了减少红黑树的高度，那么就得增加树的宽度，就是不再像红黑树一样每个节点只能保存一个数据，可以引入另外一种数据结构，一个节点可以保存多个数据，这样宽度就会增加从而降低树的高度。而 <code>B+Tree</code> 就满足这种要求。</p></div><p><code>B+Tree</code>（多路平衡搜索树）结构中如何避免这个问题：</p><figure><img src="https://cloud.braumace.cn/f/1Es1/mysql-0.15.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>B+Tree</code> 结构：</p><ul><li>每一个节点，可以存储多个 <code>key</code>（有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个 <code>key</code>，就有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个指针）</li><li>节点分为：叶子节点、非叶子节点 <ul><li>叶子节点，就是最后一层子节点，所有的数据都存储在叶子节点上</li><li>非叶子节点，不是树结构最下面的节点，用于索引数据，存储的的是：<code>key + 指针</code></li></ul></li><li>为了提高范围查询效率，叶子节点形成了一个双向链表，便于数据的排序及区间范围查询</li></ul><div class="hint-container info"><p class="hint-container-title">拓展</p><p>非叶子节点都是由 <code>key + 指针域</code> 组成的，一个 <code>key</code> 占 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>8</mn></mrow><annotation encoding="application/x-tex">8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8</span></span></span></span> 字节，一个指针占 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn></mrow><annotation encoding="application/x-tex">6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span></span></span></span> 字节，而一个节点总共容量是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mi>K</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">16KB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">16</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，那么可以计算出一个节点可以存储的元素个数：<code>16*1024字节 / (8+6) = 1170</code> 个元素。</p><ul><li><p>查看 mysql 索引节点大小：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">global</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> status</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> like</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;innodb_page_size&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 节点大小：16384</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>当根节点中可以存储 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1170</mn></mrow><annotation encoding="application/x-tex">1170</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1170</span></span></span></span> 个元素，那么根据每个元素的地址值又会找到下面的子节点，每个子节点也会存储 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1170</mn></mrow><annotation encoding="application/x-tex">1170</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1170</span></span></span></span> 个元素，那么第二层即第二次 IO 的时候就会找到数据大概是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1170</mn><mo>∗</mo><mn>1170</mn><mo>=</mo><mn>135</mn><mi>W</mi></mrow><annotation encoding="application/x-tex">1170*1170=135W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1170</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1170</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">135</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>。也就是说 <code>B+Tree</code> 数据结构中只需要经历两次磁盘 IO 就可以找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>135</mn><mi>W</mi></mrow><annotation encoding="application/x-tex">135W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">135</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 条数据。</p><p>对于第二层每个元素有指针，那么会找到第三层，第三层由 <code>key + 数据</code> 组成，假设 <code>key + 数据</code> 总大小是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi>K</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">1KB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，而每个节点一共能存储 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mi>K</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">16KB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">16</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，所以一个第三层一个节点大概可以存储 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn></mrow><annotation encoding="application/x-tex">16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">16</span></span></span></span> 个元素(即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn></mrow><annotation encoding="application/x-tex">16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">16</span></span></span></span> 条记录)。那么结合第二层每个元素通过指针域找到第三层的节点，第二层一共是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>135</mn><mi>W</mi></mrow><annotation encoding="application/x-tex">135W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">135</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 个元素，那么第三层总元素大小就是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>135</mn><mi>W</mi><mo>∗</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">135W*16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">135</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">16</span></span></span></span> 结果就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2000</mn><mi>W</mi><mo>+</mo></mrow><annotation encoding="application/x-tex">2000W+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">2000</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">+</span></span></span></span> 的元素个数。</p><p>结合上述分析 <code>B+Tree</code> 有如下优点：</p><ul><li>千万条数据，<code>B+Tree</code> 可以控制在小于等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span> 的高度</li><li>所有的数据都存储在叶子节点上，并且底层已经实现了按照索引进行排序，还可以支持范围查询，叶子节点是一个双向链表，支持从小到大或者从大到小查找</li></ul></div><h3 id="_8-3-语法" tabindex="-1"><a class="header-anchor" href="#_8-3-语法"><span>8.3 语法</span></a></h3><p><strong>创建索引</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  [ unique ]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 索引名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名 (字段名,... ) ;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>查看索引</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">show  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">index</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>删除索引</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  索引名  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ul><li><p>主键字段，在建表时，会自动创建主键索引</p></li><li><p>添加唯一约束时，数据库实际上会添加唯一索引</p></li></ul></div>`,290))])}const k=a(h,[["render",d],["__file","MySQL基础.html.vue"]]),c=JSON.parse('{"path":"/computer/database/mysql/MySQL%E5%9F%BA%E7%A1%80.html","title":"MySQL 基础知识","lang":"zh-CN","frontmatter":{"order":1,"category":["MySQL"],"tag":["基础"],"head":[["meta",{"property":"og:url","content":"https://blog.braumace.cn/computer/database/mysql/MySQL%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"ByteLighting"}],["meta",{"property":"og:title","content":"MySQL 基础知识"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cloud.braumace.cn/f/2nsZ/mysql-0.1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-05T12:57:18.000Z"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:modified_time","content":"2024-10-05T12:57:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 基础知识\\",\\"image\\":[\\"https://cloud.braumace.cn/f/2nsZ/mysql-0.1.png\\",\\"https://cloud.braumace.cn/f/DxCX/mysql-0.2.png\\",\\"https://cloud.braumace.cn/f/LwIl/mysql-0.3.png\\",\\"https://cloud.braumace.cn/f/WWi7/mysql-0.4.png\\",\\"https://cloud.braumace.cn/f/lgFD/mysql-0.5.png\\",\\"https://cloud.braumace.cn/f/EWHY/mysql-0.6.png\\",\\"https://cloud.braumace.cn/f/NEuv/mysql-0.7.png\\",\\"https://cloud.braumace.cn/f/Xoc0/mysql-0.8.png\\",\\"https://cloud.braumace.cn/f/vrhE/mysql-0.10.png\\",\\"https://cloud.braumace.cn/f/xYTl/mysql-0.9.png\\",\\"https://cloud.braumace.cn/f/AKUE/mysql-0.11.png\\",\\"https://cloud.braumace.cn/f/yzt1/mysql-0.12.png\\",\\"https://cloud.braumace.cn/f/9Rfr/mysql-0.13.png\\",\\"https://cloud.braumace.cn/f/wGSk/mysql-0.14.png\\",\\"https://cloud.braumace.cn/f/1Es1/mysql-0.15.png\\"],\\"dateModified\\":\\"2024-10-05T12:57:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BraumAce\\",\\"url\\":\\"https://blog.braumace.cn/article\\"}]}"]]},"headers":[{"level":2,"title":"1. 基础","slug":"_1-基础","link":"#_1-基础","children":[{"level":3,"title":"1.1 连接","slug":"_1-1-连接","link":"#_1-1-连接","children":[]},{"level":3,"title":"1.2 SQL 简介","slug":"_1-2-sql-简介","link":"#_1-2-sql-简介","children":[{"level":4,"title":"1.2.1 SQL 通用语法","slug":"_1-2-1-sql-通用语法","link":"#_1-2-1-sql-通用语法","children":[]},{"level":4,"title":"1.2.2 分类","slug":"_1-2-2-分类","link":"#_1-2-2-分类","children":[]}]}]},{"level":2,"title":"2. 数据库设计-DDL","slug":"_2-数据库设计-ddl","link":"#_2-数据库设计-ddl","children":[{"level":3,"title":"2.1 数据库操作","slug":"_2-1-数据库操作","link":"#_2-1-数据库操作","children":[{"level":4,"title":"2.1.1 查询数据库","slug":"_2-1-1-查询数据库","link":"#_2-1-1-查询数据库","children":[]},{"level":4,"title":"2.1.2 创建数据库","slug":"_2-1-2-创建数据库","link":"#_2-1-2-创建数据库","children":[]},{"level":4,"title":"2.1.3 使用数据库","slug":"_2-1-3-使用数据库","link":"#_2-1-3-使用数据库","children":[]},{"level":4,"title":"2.1.4 删除数据库","slug":"_2-1-4-删除数据库","link":"#_2-1-4-删除数据库","children":[]}]},{"level":3,"title":"2.2 表操作","slug":"_2-2-表操作","link":"#_2-2-表操作","children":[{"level":4,"title":"2.2.1 创建","slug":"_2-2-1-创建","link":"#_2-2-1-创建","children":[{"level":5,"title":"2.2.1.1 语法","slug":"_2-2-1-1-语法","link":"#_2-2-1-1-语法","children":[]},{"level":5,"title":"2.2.1.2 约束","slug":"_2-2-1-2-约束","link":"#_2-2-1-2-约束","children":[]},{"level":5,"title":"2.2.1.3 数据类型","slug":"_2-2-1-3-数据类型","link":"#_2-2-1-3-数据类型","children":[]}]},{"level":4,"title":"2.2.2 查询","slug":"_2-2-2-查询","link":"#_2-2-2-查询","children":[]},{"level":4,"title":"2.2.3 修改","slug":"_2-2-3-修改","link":"#_2-2-3-修改","children":[]},{"level":4,"title":"2.2.4 删除","slug":"_2-2-4-删除","link":"#_2-2-4-删除","children":[]}]}]},{"level":2,"title":"3. 数据库操作-DML","slug":"_3-数据库操作-dml","link":"#_3-数据库操作-dml","children":[{"level":3,"title":"3.1 增加 (insert)","slug":"_3-1-增加-insert","link":"#_3-1-增加-insert","children":[]},{"level":3,"title":"3.2 修改 (update)","slug":"_3-2-修改-update","link":"#_3-2-修改-update","children":[]},{"level":3,"title":"3.3 删除 (delete)","slug":"_3-3-删除-delete","link":"#_3-3-删除-delete","children":[]}]},{"level":2,"title":"4. 数据库操作-DQL","slug":"_4-数据库操作-dql","link":"#_4-数据库操作-dql","children":[{"level":3,"title":"4.1 语法","slug":"_4-1-语法","link":"#_4-1-语法","children":[]},{"level":3,"title":"4.2 基本查询","slug":"_4-2-基本查询","link":"#_4-2-基本查询","children":[]},{"level":3,"title":"4.3 条件查询","slug":"_4-3-条件查询","link":"#_4-3-条件查询","children":[]},{"level":3,"title":"4.4 聚合函数","slug":"_4-4-聚合函数","link":"#_4-4-聚合函数","children":[]},{"level":3,"title":"4.5 分组查询","slug":"_4-5-分组查询","link":"#_4-5-分组查询","children":[]},{"level":3,"title":"4.6 排序查询","slug":"_4-6-排序查询","link":"#_4-6-排序查询","children":[]},{"level":3,"title":"4.7 分页查询","slug":"_4-7-分页查询","link":"#_4-7-分页查询","children":[]}]},{"level":2,"title":"5. 多表设计","slug":"_5-多表设计","link":"#_5-多表设计","children":[{"level":3,"title":"5.1 一对多 - 外键约束","slug":"_5-1-一对多-外键约束","link":"#_5-1-一对多-外键约束","children":[]},{"level":3,"title":"5.2 一对一","slug":"_5-2-一对一","link":"#_5-2-一对一","children":[]},{"level":3,"title":"5.3 多对多","slug":"_5-3-多对多","link":"#_5-3-多对多","children":[]}]},{"level":2,"title":"6. 多表查询","slug":"_6-多表查询","link":"#_6-多表查询","children":[{"level":3,"title":"6.1 概述","slug":"_6-1-概述","link":"#_6-1-概述","children":[{"level":4,"title":"6.1.1 介绍","slug":"_6-1-1-介绍","link":"#_6-1-1-介绍","children":[]},{"level":4,"title":"6.1.2 分类","slug":"_6-1-2-分类","link":"#_6-1-2-分类","children":[]}]},{"level":3,"title":"6.3 内连接","slug":"_6-3-内连接","link":"#_6-3-内连接","children":[]},{"level":3,"title":"6.3 外连接","slug":"_6-3-外连接","link":"#_6-3-外连接","children":[]},{"level":3,"title":"6.4 子查询","slug":"_6-4-子查询","link":"#_6-4-子查询","children":[{"level":4,"title":"6.4.1 介绍","slug":"_6-4-1-介绍","link":"#_6-4-1-介绍","children":[]},{"level":4,"title":"6.4.2 标量子查询","slug":"_6-4-2-标量子查询","link":"#_6-4-2-标量子查询","children":[]},{"level":4,"title":"6.4.3 列子查询","slug":"_6-4-3-列子查询","link":"#_6-4-3-列子查询","children":[]},{"level":4,"title":"6.4.4 行子查询","slug":"_6-4-4-行子查询","link":"#_6-4-4-行子查询","children":[]},{"level":4,"title":"6.4.5 表子查询","slug":"_6-4-5-表子查询","link":"#_6-4-5-表子查询","children":[]}]}]},{"level":2,"title":"7. 事务","slug":"_7-事务","link":"#_7-事务","children":[{"level":3,"title":"7.1 介绍","slug":"_7-1-介绍","link":"#_7-1-介绍","children":[]},{"level":3,"title":"7.2 操作","slug":"_7-2-操作","link":"#_7-2-操作","children":[]},{"level":3,"title":"7.3 四大特性","slug":"_7-3-四大特性","link":"#_7-3-四大特性","children":[]}]},{"level":2,"title":"8. 索引","slug":"_8-索引","link":"#_8-索引","children":[{"level":3,"title":"8.1 介绍","slug":"_8-1-介绍","link":"#_8-1-介绍","children":[]},{"level":3,"title":"8.2 结构","slug":"_8-2-结构","link":"#_8-2-结构","children":[]},{"level":3,"title":"8.3 语法","slug":"_8-3-语法","link":"#_8-3-语法","children":[]}]}],"git":{"createdTime":1723381360000,"updatedTime":1728133038000,"contributors":[{"name":"BraumAce","email":"1693717911@qq.com","commits":3}]},"readingTime":{"minutes":27.67,"words":8301},"filePathRelative":"computer/database/mysql/MySQL基础.md","localizedDate":"2024年8月11日","excerpt":"\\n"}');export{k as comp,c as data};
