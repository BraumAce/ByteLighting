import{_ as l,c as t,a as i,b as a,d as s,o as n}from"./app-D-bxwJbL.js";const r={};function o(c,e){return n(),t("div",null,[e[0]||(e[0]=i("h1",{id:"第一期-上",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#第一期-上"},[i("span",null,"第一期 - 上")])],-1)),e[1]||(e[1]=i("p",null,"用户中心笔记第一期 - 上",-1)),a(" more "),e[2]||(e[2]=s(`<h2 id="_1、企业做项目流程" tabindex="-1"><a class="header-anchor" href="#_1、企业做项目流程"><span>1、企业做项目流程</span></a></h2><ol><li>需求分析</li><li>设计（概要设计、详细设计）</li><li>技术选型</li><li>初始化 / 引入需要的技术</li><li>写 Demo</li><li>写代码（实现业务逻辑）</li><li>测试（单元测试、系统测试）</li><li>代码提交 / 代码评审</li><li>部署</li><li>发布上线</li></ol><h2 id="_2、需求分析" tabindex="-1"><a class="header-anchor" href="#_2、需求分析"><span>2、需求分析</span></a></h2><ol><li>登录 / 注册</li><li>用户管理（仅管理员可见）对用户的查询或者修改</li><li>用户校验（注册校验，权限校验）</li></ol><h2 id="_3、技术选型" tabindex="-1"><a class="header-anchor" href="#_3、技术选型"><span>3、技术选型</span></a></h2><p>前端：</p><ul><li>HTML+CSS+JavaScript 三件套</li><li>React 开发框架</li><li>组件库 Ant Design</li><li>Umi 开发框架</li><li>Umi Request 开发框架Ant Design Pro（现成的管理系统）</li></ul><p>后端：</p><ul><li>java</li><li>spring（依赖注入框架，帮助你管理 Java 对象，集成一些其他的内容）</li><li>springmvc（web 框架，提供接口访问、restful接口等能力）</li><li>mybatis（Java 操作数据库的框架，持久层框架，对 jdbc 的封装）</li><li>mybatis-plus（对 mybatis 的增强，不用写 sql 也能实现增删改查）</li><li>springboot（快速启动 / 快速集成项目。不用自己管理 spring 配置，不用自己整合各种框架）</li><li>junit 单元测试库</li><li>mysql 数据库</li></ul><p>部署：服务器 / 容器（平台）</p><h2 id="_4、初始化项目" tabindex="-1"><a class="header-anchor" href="#_4、初始化项目"><span>4、初始化项目</span></a></h2><h3 id="_4-1-前端初始化" tabindex="-1"><a class="header-anchor" href="#_4-1-前端初始化"><span>4.1 前端初始化</span></a></h3><ol><li>按照 Nodejs 版本 16.14 以上</li></ol><p><a href="https://pro.ant.design/zh-CN" target="_blank" rel="noopener noreferrer">Ant Design Pro</a> 前端框架</p><p>先新建一个文件夹 <code>user-center</code>，进入到目录，在地址栏输入 <code>cmd</code>，打开终端，输入以下命令初始化前端：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @ant-design/pro-cli</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pro</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user-center-ui</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">步骤</p><p>执行后进入前端框架初始化过程，这里选择使用 <code>umi@3</code> 和 <code>simple</code> 一个简单模式的脚手架，然后通过 webstorm 进入 <code>user-center-ui</code> 文件夹，打开终端，输入 <code>yarn</code>，自动安装相关依赖。安装依赖完成后，找到 <code>package.json</code>。scripts 下有很多脚本，找到 <code>start</code> 并运行。即可启动 ant design pro.</p></div><ol start="2"><li>关于 Umi UI 插件的构建，因为我们之前已经选择的是 <code>umi@3</code>，进入 <code>myapp</code> 文件夹的 terminal 是一个 Umi UI 可视化辅助工具，但是区块一直无法显示，挂了梯子以及修改了 hosts 之后还是不行，所以实在不行可以跳过，不影响后续开发。</li></ol><div class="hint-container tip"><p class="hint-container-title">安装 Umi UI</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @umijs/preset-ui</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用该工具可以帮助我们快速生成页面</p></div><ol start="3"><li><p>前端瘦身</p><ul><li>删除国际化 <ul><li>执行 <code>package.json</code> 的 scripts 下的 <code>i18n-remove</code> 脚本，移除国际化</li><li>删除前端路径下 <code>src/locales</code> 文件夹</li></ul></li><li>删除项目路径下 <code>src/e2e</code> 文件夹 <ul><li>e2e 文件夹里面定义的是一系列测试流程</li></ul></li><li>若前面有使用 Umi UI 添加页面，可把该页面删除 <ul><li>注意：需要在路劲为 <code>config/routes.ts</code> 的文件夹下，删除对应的路由规则</li></ul></li><li>删除项目路径下 <code>src/services/swagger</code> 文件夹 <ul><li>swagger 文件夹里面定义了一系列后台接口程序</li></ul></li><li>删除项目路径下 <code>config/oneapi.json</code> 文件 <ul><li>oneapi.json 定义了整个项目用到的一些接口</li></ul></li><li>删除项目根路径下 <code>tests</code> 文件夹 <ul><li>tests 文件夹主要是和测试相关的</li></ul></li><li>删除项目根路径下 <code>jest.config.js</code> 文件 <ul><li>jest.config.js 测试相关的配置文件</li></ul></li><li>删除项目根路径下 <code>playwright.config.ts</code> 文件 <ul><li>playwright.config.ts -&gt; 自动化测试工具，帮你在火狐或谷歌自动测试，不用真实地打开浏览器就能测试</li></ul></li></ul></li></ol><h3 id="_4-2-后端初始化-3种初始化-java-项目的方式" tabindex="-1"><a class="header-anchor" href="#_4-2-后端初始化-3种初始化-java-项目的方式"><span>4.2 后端初始化：3种初始化 Java 项目的方式</span></a></h3><ol><li><p>GitHub 搜现成的代码</p></li><li><p>SpringBoot 官方的模板生成器（<a href="https://start.spring.io/" target="_blank" rel="noopener noreferrer">https://start.spring.io/</a>）</p></li><li><p>直接在 IDEA 开发工具中生成 （一般都是自己创建工程）<br> 如果要引入 java 的包，可以去 maven 中心仓库寻找（<a href="http://mvnrepository.com/" target="_blank" rel="noopener noreferrer">http://mvnrepository.com/</a>）新建好工程，然后整合 MyBatis-Plus 跟着官网来就可以了</p></li></ol>`,22))])}const d=l(r,[["render",o],["__file","1. 上.html.vue"]]),h=JSON.parse('{"path":"/open-project/user-center/1.%20%E4%B8%8A.html","title":"第一期 - 上","lang":"zh-CN","frontmatter":{"date":"2024-07-05T00:00:00.000Z","order":1,"category":["项目"],"tag":["用户中心"],"description":"用户中心笔记第一期 - 上","head":[["meta",{"property":"og:url","content":"https://blog.braumace.cn/open-project/user-center/1.%20%E4%B8%8A.html"}],["meta",{"property":"og:site_name","content":"ByteLighting"}],["meta",{"property":"og:title","content":"第一期 - 上"}],["meta",{"property":"og:description","content":"用户中心笔记第一期 - 上"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-13T15:49:24.000Z"}],["meta",{"property":"article:tag","content":"用户中心"}],["meta",{"property":"article:published_time","content":"2024-07-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-13T15:49:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第一期 - 上\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-13T15:49:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BraumAce\\",\\"url\\":\\"https://blog.braumace.cn/article\\"}]}"]]},"headers":[{"level":2,"title":"1、企业做项目流程","slug":"_1、企业做项目流程","link":"#_1、企业做项目流程","children":[]},{"level":2,"title":"2、需求分析","slug":"_2、需求分析","link":"#_2、需求分析","children":[]},{"level":2,"title":"3、技术选型","slug":"_3、技术选型","link":"#_3、技术选型","children":[]},{"level":2,"title":"4、初始化项目","slug":"_4、初始化项目","link":"#_4、初始化项目","children":[{"level":3,"title":"4.1 前端初始化","slug":"_4-1-前端初始化","link":"#_4-1-前端初始化","children":[]},{"level":3,"title":"4.2 后端初始化：3种初始化 Java 项目的方式","slug":"_4-2-后端初始化-3种初始化-java-项目的方式","link":"#_4-2-后端初始化-3种初始化-java-项目的方式","children":[]}]}],"git":{"createdTime":1723037923000,"updatedTime":1734104964000,"contributors":[{"name":"liuguang","email":"liuguang.peng@aloudata.com","commits":1}]},"readingTime":{"minutes":3.26,"words":977},"filePathRelative":"open-project/user-center/1. 上.md","localizedDate":"2024年7月5日","excerpt":"\\n<p>用户中心笔记第一期 - 上</p>\\n","autoDesc":true}');export{d as comp,h as data};
