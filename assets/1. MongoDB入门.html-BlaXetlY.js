import{_ as a,c as e,a as s,b as n,d as l,o as t}from"./app-BWC8kItm.js";const h={};function d(k,i){return t(),e("div",null,[i[0]||(i[0]=s("h1",{id:"半小时入门-mongodb",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#半小时入门-mongodb"},[s("span",null,"半小时入门 MongoDB")])],-1)),n(" more "),i[1]||(i[1]=l(`<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><h2 id="_1-1-什么是-mongodb" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是-mongodb"><span>1.1 什么是 MongoDB？</span></a></h2><blockquote><p>MongoDB 官网：<a href="https://www.mongodb.com/" target="_blank" rel="noopener noreferrer">MongoDB：开发者数据平台</a></p><p>MongoDB 官方文档：<a href="https://www.mongodb.com/zh-cn/docs/" target="_blank" rel="noopener noreferrer">MongoDB 文档</a></p></blockquote><p>MongoDB 是一个文档型数据库，数据以类似 JSON 的文档形式存储（称为 <a href="https://www.mongodb.com/zh-cn/docs/manual/reference/bson-types/#std-label-bson-types" target="_blank" rel="noopener noreferrer">BSON</a>）。其设计理念是为了应对大数据量、高性能和灵活性需求。</p><p>MongoDB 使用集合（Collections）来组织文档（Documents），每个文档都是由键值对组成的。</p><ul><li><strong>数据库（Database）</strong>：存储数据的容器，类似于关系型数据库中的数据库。</li><li><strong>集合（Collection）</strong>：数据库中的一个集合，类似于关系型数据库中的表。</li><li><strong>文档（Document）</strong>：集合中的一个数据记录，类似于关系型数据库中的行（row），以 BSON 格式存储。</li><li><strong>字段（Field）</strong>：文档中的键值对，类似于关系型数据库中的列（column），可以是 BSON 对象或者数组。</li></ul><p>MongoDB 将数据存储为一个文档，数据结构由键值 <strong>(key =&gt; value)</strong> 对组成，文档类似于 JSON 对象，字段值可以包含其他文档，数组及文档数组：</p><figure><img src="https://cloud.bytelighting.cn/f/7zzi9/1_1.mongo的数据结构.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_1-2-bson-文档" tabindex="-1"><a class="header-anchor" href="#_1-2-bson-文档"><span>1.2 BSON 文档</span></a></h2><p>详情：<a href="https://docs.mongoing.com/mongo-introduction/documents" target="_blank" rel="noopener noreferrer">BSON 文档</a></p><p>MongoDB 将数据记录存储为 BSON 文档（BSON 是 JSON 文档的二进制表示形式，包含比 JSON 更多的数据类型）。</p><h3 id="_1-2-1-文档结构" tabindex="-1"><a class="header-anchor" href="#_1-2-1-文档结构"><span>1.2.1 文档结构</span></a></h3><p>MongoDB 的数据记录，<strong>字段名称是字符串</strong>，<strong>字段的值可以是任何 BSON <a href="https://docs.mongodb.com/v4.2/reference/bson-types/" target="_blank" rel="noopener noreferrer">数据类型</a></strong>，包括其他文档，数组和文档数组。例如，以下文档包含各种类型的值：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    _id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ObjectId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;5099803df3f4948bd2f98391&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">first</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Alan&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">last</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Turing&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    birth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Jun 23, 1912&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    death</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Jun 07, 1954&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    contribs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Turing machine&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Turing test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Turingery&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    views</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NumberLong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1250000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的字段具有以下数据类型：</p><ul><li><p><code>_id</code> 保存一个 <a href="https://www.mongodb.com/zh-cn/docs/manual/reference/bson-types/#std-label-objectid" target="_blank" rel="noopener noreferrer">ObjectId</a>。</p></li><li><p><code>name</code> 包含一个嵌入式文档，其中包含字段 <code>first</code> 和 <code>last</code>。</p></li><li><p><code>birth</code> 和 <code>death</code> 保留 Date 类型的值。</p></li><li><p><code>contribs</code> 拥有字符串数组。</p></li><li><p><code>views</code> 保存NumberLong_类型的值。</p></li></ul><h3 id="_1-2-2-点符号" tabindex="-1"><a class="header-anchor" href="#_1-2-2-点符号"><span>1.2.2 点符号</span></a></h3><p>MongoDB 使用点符号来访问数组的元素和访问嵌入式文档的字段。</p><p><strong>数组：</strong></p><p>数组的索引位置从零开始。</p><p>要使用点符号指定或访问数组元素，请用点号 (<code>.</code>) 将数组名称和索引位置连接，并用引号引起来：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;array&gt;.&lt;index&gt;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如，假设文档中包含以下给定字段：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">   ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">   names</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;刘备&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;关羽&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;张飞&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ],</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">   ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要指定 <code>names</code> 数组中的第三个元素，使用点符号 <code>&quot;names.2&quot;</code>。</p><p><strong>嵌入式文档：</strong></p><p>要使用点符号指定或访问嵌入式文档的字段，请将嵌入式文档名称与点 (<code>.</code>) 和字段名称连接起来，并用引号引起来：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;embedded document&gt;.&lt;field&gt;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如，假设文档中包含以下给定字段：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">   ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">   name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">first</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;刘备&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">last</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;张飞&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">   contact</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">phone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cell&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;111-222-3333&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } },</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">   ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要在 <code>name</code> 字段中指定名为 <code>last</code> 的字段，请使用点符号 <code>&quot;name.last&quot;</code>。</p><p>要在 <code>contact</code> 字段中指定 <code>phone</code> 文档中的 <code>number</code>，请使用点符号 <code>&quot;contact.phone.number&quot;</code>。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>分区字段不能使用包含点 (<code>.</code>) 的字段名称。</p></div><h3 id="_1-2-3-bson-类型" tabindex="-1"><a class="header-anchor" href="#_1-2-3-bson-类型"><span>1.2.3 BSON 类型</span></a></h3><p>介绍某些常见 BSON 数据类型。</p><p>完整列表 <a href="https://github.com/mongodb/specifications/blob/master/source/extended-json/extended-json.md" target="_blank" rel="noopener noreferrer">在此</a>。</p><p><strong><code>Array</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[ &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">elements</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中数组元素如下：</p><ul><li><code>[ &lt;elements&gt; ]</code><ul><li>数组元素使用扩展 JSON。</li><li>要指定空数组，请省略内容 <code>[ ]</code>。</li></ul></li></ul><p><strong><code>Binary</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$binary&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;base64&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;payload&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;subType&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;t&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><p><code>&quot;&lt;payload&gt;&quot;</code></p><ul><li>Base64 编码（填充为 &quot;=&quot;）有效负载字符串。</li></ul></li><li><p><code>&quot;&lt;t&gt;&quot;</code></p><ul><li>对应于 BSON 二进制子类型的一个字符或两个字符的十六进制字符串。有关可用的子类型，请参阅扩展版 bson 文档 <a href="http://bsonspec.org/spec.html" target="_blank" rel="noopener noreferrer">http://bsonspec.org/spec.html</a>。</li></ul></li></ul><p><strong><code>Date</code></strong></p><p><strong>适用于 1970 年至 9999 年（含）之间的日期：</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$date&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$numberLong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&lt;millis&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$date&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;ISO-8601 Date/Time Format&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>对于 1970 年之前或 9999 年之后的日期：</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$date&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$numberLong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&lt;millis&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><p><code>&quot;&lt;millis&gt;&quot;</code></p><ul><li>作为字符串的 64 位有符号整数。该值表示相对于纪元的毫秒数。</li></ul></li><li><p><code>&quot;&lt;ISO-8601 Date/Time Format&gt;&quot;</code></p><ul><li>以 <a href="https://datatracker.ietf.org/doc/html/rfc3339#section-5.6" target="_blank" rel="noopener noreferrer">ISO-8601 互联网日期/时间格式</a> 为字符串的日期。</li><li>日期/时间的最大时间精度为毫秒： <ul><li>如果小数部分为非零，则小数形式的秒数实际有 3 个小数位。</li><li>否则，如果秒的小数部分为零，则应省略。</li></ul></li></ul></li></ul><p><strong><code>Decimal128</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$numberDecimal&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;number&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><code>&quot;&lt;number&gt;&quot;</code><ul><li><a href="https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.md" target="_blank" rel="noopener noreferrer">高精度小数</a> 作为字符串。</li></ul></li></ul><p><strong><code>Document</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中文档内容如下所示：</p><ul><li><code>&lt;content&gt;</code><ul><li>使用扩展 JSON 的 “名称:值” 对。</li><li>要指定空文档，请省略内容 <code>{ }</code>。</li></ul></li></ul><p><strong><code>Double</code></strong></p><p><strong>对于有限数：</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$numberDouble&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;decimal string&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>对于无限数或 NAN：</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$numberDouble&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Infinity&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-Infinity&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;NaN&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><p><code>&quot;&lt;decimal string&gt;&quot;</code></p><ul><li>作为字符串的 64 位带符号浮点数。</li></ul></li><li><p><code>&lt;non-integer number&gt;</code></p><ul><li>非整数。整数数字将解析为整数而不是 double。</li></ul></li></ul><p><strong><code>Int64</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$numberLong&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;number&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><p><code>&quot;&lt;number&gt;&quot;</code></p><ul><li>作为字符串的 64 位有符号整数。</li></ul></li><li><p><code>&lt;integer&gt;</code></p><ul><li>64 位有符号整数。</li></ul></li></ul><p><strong><code>Int32</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$numberInt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;number&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><p><code>&quot;&lt;number&gt;&quot;</code></p><ul><li>作为字符串的 32 位有符号整数。</li></ul></li><li><p><code>&lt;integer&gt;</code></p><ul><li>一个 32 位有符号整数。</li></ul></li></ul><p><strong><code>MaxKey</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$maxKey&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>MaxKey BSON 数据类型的比较高于所有其他类型。请参阅 <a href="https://www.mongodb.com/zh-cn/docs/manual/reference/bson-type-comparison-order/#std-label-faq-dev-compare-order-for-BSON-types" target="_blank" rel="noopener noreferrer">比较/排序顺序</a> 以了解有关 BSON 类型的比较顺序的更多信息。</p><p><strong><code>MinKey</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$minKey&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>MinKey BSON 数据类型的比较值低于所有其他类型。数据类型有关 BSON 类型的比较顺序的更多信息，请参阅 <a href="https://www.mongodb.com/zh-cn/docs/manual/reference/bson-type-comparison-order/#std-label-faq-dev-compare-order-for-BSON-types" target="_blank" rel="noopener noreferrer">比较/排序顺序</a>。</p><p><strong><code>ObjectId</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$oid&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;ObjectId bytes&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><code>&quot;&lt;ObjectId bytes&gt;&quot;</code><ul><li>一个 24 个字符大端十六进制字符串，表示对象标识符字节。</li></ul></li></ul><p><strong><code>Regular Expression</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$regularExpression&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;pattern&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;regexPattern&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;options&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;options&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><p><code>&quot;&lt;regexPattern&gt;&quot;</code></p><ul><li>与正则表达式模式相对应的字符串。字符串可以包含有效的 JSON 字符和非转义双引号 (<code>&quot;</code>) 字符，但不能包含未转义的正斜杠 (<code>/</code>) 字符。</li></ul></li><li><p><code>&quot;&lt;options&gt;&quot;</code></p><ul><li>指定 BSON 正则表达式选项的字符串。必须按字母顺序指定选项。有关受支持选项的信息，请参阅 <a href="https://www.mongodb.com/zh-cn/docs/manual/reference/operator/query/regex/#mongodb-query-op.-options" target="_blank" rel="noopener noreferrer"><code>$options</code></a> 。</li></ul></li></ul><p><strong><code>Timestamp</code></strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$timestamp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;, &quot;i&quot;: &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中的值如下所示：</p><ul><li><p><code>&lt;t&gt;</code></p><ul><li>自纪元以来的秒数的正整数。</li></ul></li><li><p><code>&lt;i&gt;</code></p><ul><li>增量的正整数。</li></ul></li></ul><h2 id="_2-安装" tabindex="-1"><a class="header-anchor" href="#_2-安装"><span>2. 安装</span></a></h2><p>安装有三部分：</p><ol><li><p>MongoDB Server 数据库服务</p><ul><li>个人开发选择 MongoDB Community Server，下载地址：<a href="https://www.mongodb.com/try/download/community" target="_blank" rel="noopener noreferrer">https://www.mongodb.com/try/download/community</a></li></ul></li><li><p>MongoDB Shell 交互式界面</p><ul><li>允许用户与 MongoDB 数据库进行交互、执行命令和操作数据库。</li><li>基于 JavaScript，允许用户直接在命令行或者脚本中使用 JavaScript 语言来操作 MongoDB 数据库。</li><li>MongoDB Shell 是 MongoDB 数据库安装包的一部分，因此，安装 MongoDB 数据库也会自动安装 MongoDB Shell。</li><li>MongoDB Shell 下载地址：<a href="https://www.mongodb.com/zh-cn/docs/mongodb-shell/install/" target="_blank" rel="noopener noreferrer">https://www.mongodb.com/zh-cn/docs/mongodb-shell/install/</a></li></ul></li><li><p>MongoDB Compass 图形化工具</p><ul><li>一款功能强大的 GUI，用于在可视环境中查询、聚合和分析 MongoDB 数据。</li><li>下载地址：<a href="https://www.mongodb.com/try/download/compass" target="_blank" rel="noopener noreferrer">https://www.mongodb.com/try/download/compass</a></li></ul></li></ol><p>不同系统的安装过程：</p><ul><li><a href="https://www.runoob.com/mongodb/mongodb-window-install.html" target="_blank" rel="noopener noreferrer">Windows MongoDB</a></li><li><a href="https://www.runoob.com/mongodb/mongodb-linux-install.html" target="_blank" rel="noopener noreferrer">Linux MongoDB</a></li><li><a href="https://www.runoob.com/mongodb/mongodb-osx-install.html" target="_blank" rel="noopener noreferrer">MacOS MongoDB</a></li></ul><h2 id="_3-数据库操作" tabindex="-1"><a class="header-anchor" href="#_3-数据库操作"><span>3. 数据库操作</span></a></h2><p><strong>1. <code>mongosh</code></strong></p><p>打开一个连接到本地实例的 MongoShell。所有其他命令都需要在 mongosh 中执行。</p><p><strong>2. <code>show databases</code>/<code>show dbs</code></strong></p><p>显示当前 MongoDB 实例中的所有数据库。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> show</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dbs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">admin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   40.00</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> KiB</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  72.00</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> KiB</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">local</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   72.00</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> KiB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. <code>use &lt;dbname&gt;</code></strong></p><p>切换到数据库 <code>&lt;dbname&gt;</code>。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> use</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> test</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">switched</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> to</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. <code>db</code></strong></p><p>显示当前使用中的数据库名称。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> db</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. <code>show collections</code></strong></p><p>显示当前数据库中的所有集合。</p><p><strong>6. <code>db.dropDatabase()</code></strong></p><p>删除当前的数据库。</p><p><strong>7. <code>exit</code></strong></p><p>退出 mongosh 会话。</p><h2 id="_4-crud-操作" tabindex="-1"><a class="header-anchor" href="#_4-crud-操作"><span>4. CRUD 操作</span></a></h2><h3 id="_4-1-集合操作" tabindex="-1"><a class="header-anchor" href="#_4-1-集合操作"><span>4.1 集合操作</span></a></h3><p><strong>1. <code>db.createCollection()</code></strong></p><p>创建集合。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 创建集合 users</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createCollection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;users&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ok&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. <code>db.collection.renameCollection()</code></strong></p><p>更新集合名。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>db.collection.renameCollection()</code> 方法中 <code>collection</code> 为集合，实际使用应替换为具体的集合名。</p></div><p>在 MongoDB 中，不能直接通过命令来重命名集合。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 将 users 重命名为 newusers</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">renameCollection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;newusers&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ok&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. <code>db.collection.drop()</code></strong></p><p>删除集合。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 删除集合 newusers</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">newusers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-文档操作" tabindex="-1"><a class="header-anchor" href="#_4-2-文档操作"><span>4.2 文档操作</span></a></h3><h4 id="_4-2-1-插入" tabindex="-1"><a class="header-anchor" href="#_4-2-1-插入"><span>4.2.1 插入</span></a></h4><p><strong>1. <code>db.collection.insertOne()</code></strong></p><p>将单个文档插入集合中。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">insertOne</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;张三&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  acknowledged</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  insertedId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ObjectId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;67b20c258a44cbcdf240acb5&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. <code>db.collection.insertMany()</code></strong></p><p>将多个文档插入到一个集合中。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">insertMany</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;李四&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;王五&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  acknowledged</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  insertedIds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;0&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ObjectId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;67b20c598a44cbcdf240acb6&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ObjectId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;67b20c598a44cbcdf240acb7&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-查找" tabindex="-1"><a class="header-anchor" href="#_4-2-2-查找"><span>4.2.2 查找</span></a></h4><p><strong>1. <code>db.collection.find()</code></strong></p><p>查询所有的文档。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>2. <code>db.collection.find(&lt;filterObject&gt;)</code></strong></p><p>查询所有满足参数对象 <code>&lt;filterObject&gt;</code> 中指定过滤条件的数据。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;张三&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>3. <code>db.collection.find(&lt;filterObject&gt;, &lt;selectObject&gt;)</code></strong></p><p>查询所有满足参数对象 <code>&lt;filterObject&gt;</code> 中指定过滤条件的数据，并且只返回 <code>&lt;selectObject&gt;</code> 中指定的字段。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1 表示选中，0 表示不选中</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;张三&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">email</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. <code>db.collection.findOne()</code></strong></p><p>与 <code>find()</code> 用法相同，找到满足过滤条件的对象，但是只返回第一条。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">findOne</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">age</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>5. <code>db.collection.countDocuments</code></strong></p><p>返回满足条件的记录的数量。</p><h4 id="_4-2-3-更新" tabindex="-1"><a class="header-anchor" href="#_4-2-3-更新"><span>4.2.3 更新</span></a></h4><h4 id="_4-2-4-删除" tabindex="-1"><a class="header-anchor" href="#_4-2-4-删除"><span>4.2.4 删除</span></a></h4><p><strong>1. <code>db.collection.deleteOne()</code></strong></p><p>删除满足条件的第一个文档。</p><p><strong>2. <code>db.collection.deleteMany()</code></strong></p><p>删除满足条件的所有文档。</p><h3 id="_4-3-范围操作" tabindex="-1"><a class="header-anchor" href="#_4-3-范围操作"><span>4.3 范围操作</span></a></h3><h2 id="_5-聚合操作" tabindex="-1"><a class="header-anchor" href="#_5-聚合操作"><span>5. 聚合操作</span></a></h2><p>聚合主要用于处理数据，并返回计算后的结果，比如求和、平均值等。</p><h2 id="_6-过滤条件" tabindex="-1"><a class="header-anchor" href="#_6-过滤条件"><span>6. 过滤条件</span></a></h2>`,161))])}const p=a(h,[["render",d],["__file","1. MongoDB入门.html.vue"]]),o=JSON.parse('{"path":"/computer/database/mongo/1.%20MongoDB%E5%85%A5%E9%97%A8.html","title":"半小时入门 MongoDB","lang":"zh-CN","frontmatter":{"order":1,"category":["MongoDB"],"tag":["基础"],"head":[["meta",{"property":"og:url","content":"https://blog.bytelighting.cn/computer/database/mongo/1.%20MongoDB%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"ByteLighting"}],["meta",{"property":"og:title","content":"半小时入门 MongoDB"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cloud.bytelighting.cn/f/7zzi9/1_1.mongo%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T02:42:14.000Z"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:modified_time","content":"2025-06-17T02:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"半小时入门 MongoDB\\",\\"image\\":[\\"https://cloud.bytelighting.cn/f/7zzi9/1_1.mongo%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png\\"],\\"dateModified\\":\\"2025-06-17T02:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BraumAce\\",\\"url\\":\\"https://blog.bytelighting.cn/article\\"}]}"]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"1.1 什么是 MongoDB？","slug":"_1-1-什么是-mongodb","link":"#_1-1-什么是-mongodb","children":[]},{"level":2,"title":"1.2 BSON 文档","slug":"_1-2-bson-文档","link":"#_1-2-bson-文档","children":[{"level":3,"title":"1.2.1 文档结构","slug":"_1-2-1-文档结构","link":"#_1-2-1-文档结构","children":[]},{"level":3,"title":"1.2.2 点符号","slug":"_1-2-2-点符号","link":"#_1-2-2-点符号","children":[]},{"level":3,"title":"1.2.3 BSON 类型","slug":"_1-2-3-bson-类型","link":"#_1-2-3-bson-类型","children":[]}]},{"level":2,"title":"2. 安装","slug":"_2-安装","link":"#_2-安装","children":[]},{"level":2,"title":"3. 数据库操作","slug":"_3-数据库操作","link":"#_3-数据库操作","children":[]},{"level":2,"title":"4. CRUD 操作","slug":"_4-crud-操作","link":"#_4-crud-操作","children":[{"level":3,"title":"4.1 集合操作","slug":"_4-1-集合操作","link":"#_4-1-集合操作","children":[]},{"level":3,"title":"4.2 文档操作","slug":"_4-2-文档操作","link":"#_4-2-文档操作","children":[{"level":4,"title":"4.2.1 插入","slug":"_4-2-1-插入","link":"#_4-2-1-插入","children":[]},{"level":4,"title":"4.2.2 查找","slug":"_4-2-2-查找","link":"#_4-2-2-查找","children":[]},{"level":4,"title":"4.2.3 更新","slug":"_4-2-3-更新","link":"#_4-2-3-更新","children":[]},{"level":4,"title":"4.2.4 删除","slug":"_4-2-4-删除","link":"#_4-2-4-删除","children":[]}]},{"level":3,"title":"4.3 范围操作","slug":"_4-3-范围操作","link":"#_4-3-范围操作","children":[]}]},{"level":2,"title":"5. 聚合操作","slug":"_5-聚合操作","link":"#_5-聚合操作","children":[]},{"level":2,"title":"6. 过滤条件","slug":"_6-过滤条件","link":"#_6-过滤条件","children":[]}],"git":{"createdTime":1739721282000,"updatedTime":1750128134000,"contributors":[{"name":"BraumAce","email":"1693717911@qq.com","commits":3}]},"readingTime":{"minutes":7.8,"words":2340},"filePathRelative":"computer/database/mongo/1. MongoDB入门.md","localizedDate":"2025年2月16日","excerpt":"\\n"}');export{p as comp,o as data};
