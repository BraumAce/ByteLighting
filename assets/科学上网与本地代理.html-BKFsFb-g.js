import{_ as r,c as d,a as e,b as p,d as t,g as s,e as l,f as n,r as o,o as h}from"./app-lkVsqJyz.js";const g={},c={start:"6"};function k(b,i){const a=o("RouteLink");return h(),d("div",null,[i[20]||(i[20]=e("h1",{id:"科学上网与本地代理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#科学上网与本地代理"},[e("span",null,"科学上网与本地代理")])],-1)),p(" more "),i[21]||(i[21]=t('<p>为了某些学习目的，访问国外的一些优秀网站速度会很慢，甚至无法访问，无法查阅到想要的“资料”。</p><p>在这种时候就可能需要一些代理手段，帮助我们更科学地上网📶。</p><p>常见的有 <a href="https://bywa-1.art/" target="_blank" rel="noopener noreferrer">ByWave</a> 和 <a href="https://clashcn.com/clashreleases" target="_blank" rel="noopener noreferrer">Clash</a>，都是挺不错的选择，流量包推荐 <a href="https://xn--6nq44r2uh9rhj7f.com/" target="_blank" rel="noopener noreferrer">性价比机场.com</a>，详情请自行了解。</p><p>当然，如果比较感兴趣、喜欢动手的朋友，也可以自己搭建一个代理服务（只能自己偷偷用哦，不然要被请去喝茶了）。</p><h2 id="如何自建代理服务" tabindex="-1"><a class="header-anchor" href="#如何自建代理服务"><span>如何自建代理服务</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>以下方案需要准备两台服务器，一台国内，一台国外，并且需要对 <code>Linux运维</code> 和 <code>采购云服务器</code> 有一定的熟练度。</p></div>',6)),e("ol",null,[e("li",null,[e("p",null,[i[1]||(i[1]=s("准备一台 ")),i[2]||(i[2]=e("strong",null,"海外服务器",-1)),i[3]||(i[3]=s("，假设名为 ")),i[4]||(i[4]=e("code",null,"服务器A",-1)),i[5]||(i[5]=s("（IP 为 ")),i[6]||(i[6]=e("code",null,"123.123.123.123",-1)),i[7]||(i[7]=s("），并设置安全组开放 ")),i[8]||(i[8]=e("code",null,"10123",-1)),i[9]||(i[9]=s(" 端口（开放端口很重要，同时也很危险，详见 ")),l(a,{to:"/program/tool-build/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86.html#%E6%94%BE%E8%A1%8C%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%AD%A5%E9%AA%A4"},{default:n(()=>i[0]||(i[0]=[s("放行端口的步骤")])),_:1}),i[10]||(i[10]=s("）。"))])]),i[11]||(i[11]=t('<li><p>然后在 <code>服务器A</code> 上搭建 <a href="https://github.com/233boy/v2ray" target="_blank" rel="noopener noreferrer">v2ray</a> 服务，跟着说明文档配置，并设置端口为 <code>10123</code>。如果步骤没问题，你将会获得一些配置参数和 v2ray 协议链接。</p></li><li><p>然后下载一个 <a href="https://github.com/v2rayU/v2rayU" target="_blank" rel="noopener noreferrer">代理客户端</a>，并把协议链接录入测试 <code>123.123.123.123.10123</code> 的代理服务是否可用。</p></li>',2))]),i[22]||(i[22]=t(`<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>海外服务器的采购可以使用 <a href="https://www.aliyun.com/" target="_blank" rel="noopener noreferrer">阿里云</a> 等国内厂商没有问题，但依然推荐一些国外厂商的云主机，比如 <a href="https://www.vpsor.cn/" target="_blank" rel="noopener noreferrer">硅云</a>，也可以去找一些小众更便宜的云服务器提供商。</p><p>服务器地点一般选择 香港、新加坡 等靠近国内的延迟会比较低。</p></div><h2 id="放行端口的步骤" tabindex="-1"><a class="header-anchor" href="#放行端口的步骤"><span>放行端口的步骤</span></a></h2><p>以阿里云服务器为例，版本为 <code>CentOS 7.x</code>，首先设置安全组，添加 <code>10123</code> 端口为公开：</p><figure><img src="https://cloud.bytelighting.cn/f/mEKs1/设置安全组.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后还要在服务器上，开启防火墙并开放指定端口：</p><ol><li>查看防火墙状态并开启</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> firewalld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://cloud.bytelighting.cn/f/Y2Oc8/firewall_status.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果是 <code>active(dead)</code> 就表示停止，需要开启防火墙</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> firewalld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>开放指定端口</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">firewall-cmd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --zone=public</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add-port=10123/tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --permanent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><details class="hint-container details"><summary>参数解释</summary><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">注释</th></tr></thead><tbody><tr><td style="text-align:left;">–zone=public</td><td style="text-align:left;">作用域，公开的</td></tr><tr><td style="text-align:left;">–add-port=10123/tcp</td><td style="text-align:left;">添加端口，格式为：端口/通讯协议</td></tr><tr><td style="text-align:left;">–permanent</td><td style="text-align:left;">永久生效，没有此参数重启后失效</td></tr></tbody></table></details><ol start="3"><li>重启防火墙</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">firewall-cmd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>查看端口号命令</li></ol><p>查看端口是否放行成功</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">firewall-cmd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --list-all</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 查看防火墙规则</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">或者</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">firewall-cmd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --list-ports</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 查看防火墙端口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看当前所有 tcp 端口信息</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ntlp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看 <code>10123</code> 端口使用情况</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ntulp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10123</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="5"><li>测试端口是否能连接上</li></ol><p>打开：<a href="https://tcp.ping.pe/" target="_blank" rel="noopener noreferrer">https://tcp.ping.pe/</a></p><p>写上 IP 地址和端口，内容为 <code>ip:端口</code>，示例：<code>123.123.123.123:10123</code>，然后点击 Go 或者直接回车</p><p>如果显示 successful，证明端口能连接；如果显示 failed，那就是无法连接上端口。</p><div class="hint-container tip"><p class="hint-container-title">更简单的办法</p><p>正常来说，上面这些步骤执行后，端口一般都能连接上，如果使用上述地址测试后仍然无法连接，可能还存在外部防火墙没关或者端口放行方向不正确等问题。</p><p>为了更方便地管理防火墙和端口规则，推荐使用<strong>宝塔面板</strong>来操作。</p><p>配置好宝塔后，找到 <strong>安全</strong> 界面，添加端口规则，输入 <code>10123</code> 端口点击确定，其他保持默认即可。</p><figure><img src="https://cloud.bytelighting.cn/f/a6QFo/BT_ports_manager.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h2 id="保护你的代理服务器" tabindex="-1"><a class="header-anchor" href="#保护你的代理服务器"><span>保护你的代理服务器</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果你已经自建代理服务并用起来了，但是别开心的太早，因为 <code>123.123.123.123</code> 的 IP 可能过几天就会被 <code>GFW</code> 扫描并封禁。<br> 虽然你可以更换 IP ，但是这毕竟很麻烦，而且并不安全，而且更换 IP 会产生一定的费用。<br> 这个时候你需要采用如下做法来保护你的海外服务器以及 IP。</p></div><ol start="4"><li><p>再准备一台国内的服务器，假设名为 <code>服务器B</code>（IP为 <code>456.456.456.456</code>），并设置安全组开放 <code>20456</code> 端口。</p></li><li><p>在 <code>服务器B</code> 中安装 Nginx 并添加如下配置：</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">stream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2ray</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 123.123.123.123:10123</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20456</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2ray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        ssl_preread</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>配置解释</summary><p>这一步的意思是：将 <strong>国内</strong><code>服务器B</code> 中来自 <code>20456</code> 端口的请求全部转发给 <strong>国外</strong><code>服务器A</code> 的 <code>10123</code> 端口。</p></details>`,32)),e("ol",c,[e("li",null,[i[13]||(i[13]=s("打开 ")),i[14]||(i[14]=e("a",{href:"https://github.com/v2rayU/v2rayU",target:"_blank",rel:"noopener noreferrer"},"代理客户端",-1)),i[15]||(i[15]=s(" 的设置界面，将 ")),i[16]||(i[16]=e("code",null,"123.123.123.123.10123",-1)),i[17]||(i[17]=s(" 代理服务修改为 ")),i[18]||(i[18]=e("code",null,"456.456.456.456.20456",-1)),i[19]||(i[19]=s("。然后测试代理服务是否可用。示例配置在 ")),l(a,{to:"/program/tool-build/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86.html#%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86%E5%AE%A2%E6%88%B7%E7%AB%AF"},{default:n(()=>i[12]||(i[12]=[s("本地代理客户端")])),_:1})])]),i[23]||(i[23]=t('<details class="hint-container details"><summary>详情</summary><p>这一步的意思是，在其它设置不变的情况下，将原本的 <code>服务器A</code> 的地址和端口换成 <code>服务器B</code> 的。</p><p>到这一步之后，你每次使用代理客户端时，实际上全都是在请求国内的服务器，这时 <code>GFW</code> 的扫描不会发觉任何异常，也无法封禁国内 IP。</p></details><ol start="7"><li>修改 <code>服务器A</code> 的安全组，在宝塔上配置，让 <code>10123</code> 端口只允许 IP 为 <code>456.456.456.456</code> 的机器访问。</li></ol><figure><img src="https://cloud.bytelighting.cn/f/JPLco/限制访问.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><details class="hint-container details"><summary>详情</summary><p>到这一步之后 <code>GFW</code> 扫描 <code>服务器A</code> 就不会发现任何异常，毕竟这个端口的安全组会阻拦 <code>GFW</code> 的访问，表面看它就是一个平平无奇的服务器而已。<br> 然后国内的 <code>服务器B</code> 本身就在国内，不受 <code>GFW</code> 约束。</p><p>日常的代理客户端，只会被抓到它在请求国内服务器，则 IP 地址安全。</p><blockquote><p>当然，两台服务的成本确实会有点点高，实测这种方案最为安全和稳定。</p></blockquote></details><h2 id="本地代理客户端" tabindex="-1"><a class="header-anchor" href="#本地代理客户端"><span>本地代理客户端</span></a></h2><p><a href="https://github.com/v2rayU/v2rayU" target="_blank" rel="noopener noreferrer">https://github.com/v2rayU/v2rayU</a></p><ul><li><p>Windows：<a href="https://github.com/2dust/v2rayn/releases" target="_blank" rel="noopener noreferrer">https://github.com/2dust/v2rayn/releases</a><br> 下载 <code>v2rayN-With-Core.zip</code> 和 <code>v2rayN.zip</code> 并解压，然后将前者目录中的内容覆盖替换到后者目录中，然后就可以双击 <code>v2rayN.exe</code> 文件进行使用了。</p></li><li><p>Android：<a href="https://github.com/2dust/v2rayNG/releases" target="_blank" rel="noopener noreferrer">https://github.com/2dust/v2rayNG/releases</a><br> 下载对应的 <code>apk</code> 文件安装即可。如果打不开或安装失败就多换几个安装包试试。</p></li><li><p>MacOS：<a href="https://github.com/yanue/V2rayU/releases" target="_blank" rel="noopener noreferrer">https://github.com/yanue/V2rayU/releases</a><br> 下载对应的 <code>.dmg</code> 文件安装即可。如果打不开或安装失败就多换几个安装包试试。</p></li></ul><p>Windows 客户端配置如下：</p><ol><li><p>找到「服务器」菜单，点击 添加[VMess]服务器</p><figure><img src="https://cloud.bytelighting.cn/f/6XLiw/v2rayN_1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>输入代理的 IP 和端口，像上面我们配置了请求转发，那这里就填 <code>国内服务器B</code> 的配置，然后点击生成用户 ID，最后点击确定。</p><figure><img src="https://cloud.bytelighting.cn/f/zV9Fy/v2rayN_2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>确定后就会自动开始代理服务了。然后系统代理选择 <code>自动配置系统代理</code>（这样就不用到设置里面配置代理了），路由选择 <code>绕过大陆</code>（这样如果国内能访问就优先用国内线路，访问不了再用代理线路）。</p><blockquote><p>因为我自己有加速器，科学上网的需求也不是很高，所以用的国外服务器配置很一般，网速有点慢🤣.</p></blockquote><figure><img src="https://cloud.bytelighting.cn/f/gNBH1/v2rayN_3.png" alt="客户端配置" tabindex="0" loading="lazy"><figcaption>客户端配置</figcaption></figure><figure><img src="https://cloud.bytelighting.cn/f/BkXuB/v2rayN_4.png" alt="本地已自动配置" tabindex="0" loading="lazy"><figcaption>本地已自动配置</figcaption></figure></li></ol>',9))])}const y=r(g,[["render",k],["__file","科学上网与本地代理.html.vue"]]),m=JSON.parse('{"path":"/program/tool-build/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86.html","title":"科学上网与本地代理","lang":"zh-CN","frontmatter":{"category":["工具搭建"],"tag":["教程"],"head":[["meta",{"property":"og:url","content":"https://blog.bytelighting.cn/program/tool-build/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"ByteLighting"}],["meta",{"property":"og:title","content":"科学上网与本地代理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cloud.bytelighting.cn/f/mEKs1/%E8%AE%BE%E7%BD%AE%E5%AE%89%E5%85%A8%E7%BB%84.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-17T02:42:14.000Z"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:modified_time","content":"2025-06-17T02:42:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"科学上网与本地代理\\",\\"image\\":[\\"https://cloud.bytelighting.cn/f/mEKs1/%E8%AE%BE%E7%BD%AE%E5%AE%89%E5%85%A8%E7%BB%84.png\\",\\"https://cloud.bytelighting.cn/f/Y2Oc8/firewall_status.png\\",\\"https://cloud.bytelighting.cn/f/a6QFo/BT_ports_manager.png\\",\\"https://cloud.bytelighting.cn/f/JPLco/%E9%99%90%E5%88%B6%E8%AE%BF%E9%97%AE.png\\",\\"https://cloud.bytelighting.cn/f/6XLiw/v2rayN_1.png\\",\\"https://cloud.bytelighting.cn/f/zV9Fy/v2rayN_2.png\\",\\"https://cloud.bytelighting.cn/f/gNBH1/v2rayN_3.png\\",\\"https://cloud.bytelighting.cn/f/BkXuB/v2rayN_4.png\\"],\\"dateModified\\":\\"2025-06-17T02:42:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BraumAce\\",\\"url\\":\\"https://blog.bytelighting.cn/article\\"}]}"]]},"headers":[{"level":2,"title":"如何自建代理服务","slug":"如何自建代理服务","link":"#如何自建代理服务","children":[]},{"level":2,"title":"放行端口的步骤","slug":"放行端口的步骤","link":"#放行端口的步骤","children":[]},{"level":2,"title":"保护你的代理服务器","slug":"保护你的代理服务器","link":"#保护你的代理服务器","children":[]},{"level":2,"title":"本地代理客户端","slug":"本地代理客户端","link":"#本地代理客户端","children":[]}],"git":{"createdTime":1723470893000,"updatedTime":1750128134000,"contributors":[{"name":"BraumAce","email":"1693717911@qq.com","commits":5}]},"readingTime":{"minutes":6.22,"words":1866},"filePathRelative":"program/tool-build/科学上网与本地代理.md","localizedDate":"2024年8月12日","excerpt":"\\n"}');export{y as comp,m as data};
